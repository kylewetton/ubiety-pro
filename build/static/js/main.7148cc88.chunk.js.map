{"version":3,"sources":["config/worldConfig.tsx","config/cameraConfig.tsx","components/World/styles/WorldStyles.ts","store/product/selectors.ts","config/brandConfig.tsx","components/CustomMaterial/CustomMaterial.tsx","store/product/actions.ts","store/interface/actions.ts","store/interface/selectors.ts","components/Part/Part.tsx","components/Product/Product.tsx","config/cameraControlsConfig.tsx","components/CameraControls/CameraControls.tsx","components/World/World.tsx","store/product/thunks.ts","components/SwatchTray/styles/SwatchTrayStyles.ts","components/Icon/styles/IconStyles.ts","components/Icon/Icon.tsx","components/Checkmark/styles/CheckmarkStyles.ts","components/Checkmark/Checkmark.tsx","components/Swatch/styles/SwatchStyles.ts","components/Swatch/Swatch.tsx","components/LetterInitial/styles/LetterInitialStyles.ts","components/LetterInitial/LetterInitial.tsx","components/SwatchTray/SwatchTray.tsx","components/Selector/styles/SelectorStyles.ts","components/Selector/Selector.tsx","components/SectionSelector/SectionSelector.tsx","layout/ControlPanel/styles/ControlPanelStyles.ts","layout/ControlPanel/ControlPanel.tsx","components/ImageEditor/styles/ImageEditorStyles.ts","components/ImageUpload/styles/ImageUploadStyles.ts","components/ImageUpload/UploadFormlet.tsx","components/ImageUpload/ImageUpload.tsx","components/ImageUpload/UploadContainer.tsx","components/Button/styles/ButtonStyles.ts","components/Button/Button.tsx","layout/Modal/styles/ModalStyles.ts","layout/Modal/Modal.tsx","components/ImageEditor/ImageEditor.tsx","components/TextEditor/TextEditor.tsx","layout/SelectorTray/styles/SelectorTrayStyles.ts","layout/SelectorTray/SelectorTray.tsx","layout/StageSelectorSidebar/styles/StageSelectorSidebarStyles.ts","layout/StageSelectorSidebar/StageSelectorSidebar.tsx","components/StageSelector/styles/StageSelectorStyles.ts","components/StageSelector/StageSelector.tsx","components/LoadingOverlay/styles/LoadingOverlayStyles.ts","components/LoadingOverlay/LoadingOverlay.tsx","components/StampaColorPicker/styles/StampaColorPickerStyles.ts","components/StampaColorPicker/StampaColorPicker.tsx","layout/ScaffoldInitialsButtons/styles/ScaffoldInitialsButtonsStyles.ts","layout/ScaffoldInitialsButtons/ScaffoldInitialsButtons.tsx","components/App/App.tsx","index.tsx","store/product/types.ts","store/interface/types.ts","theme/Preflight.ts","theme/spacing.ts","theme/radius.ts","theme/breakpoints.ts","theme/textSize.ts","theme/colors.ts","theme/boxShadow.ts","utils/shapeTextureData.ts","utils/shapeSectionData.ts","store/product/reducers.ts","store/interface/reducers.ts","store/index.ts"],"names":["spotlightIntensity","spotlightDistance","worldConfig","backgroundColor","colors","brand","offwhite","effects","worldOffset","lighting","id","color","position","intensity","mapSize","shadows","cameraConfig","fov","near","far","WorldDiv","styled","div","getAllProductMeshParts","state","product","meshParts","getActiveProductPart","sections","filter","section","active","getAllSections","getActiveSection","getProductModelPath","src","getMaterialByUid","uid","materials","material","getMaterialByTag","tag","getProductCustomImage","customImage","getProductStampas","stampa","getProductStampaColor","stampaColor","getProductStampaPos","stampaPos","getProductStampaStyle","stampaStyle","brandConfig","hoverColor","CustomMaterial","customTexture","override","useSelector","useState","compedCustomTexture","setCompedCustomTexture","envMap","useCubeTexture","path","maps","useEffect","includes","customBlob","baseTexture","dimensions","proxy","document","createElement","width","height","Promise","res","rej","canvas","fabric","Canvas","setDimensions","Image","fromURL","filt","scaleToWidth","filters","BlendImage","image","mode","alpha","set","left","top","push","applyFilters","add","comped","toDataURL","fetch","then","u","blob","window","URL","createObjectURL","multiplyMaterialsTogether","paths","map","texture","fileName","hasOwnProperty","Boolean","useTexture","textureObj","Object","assign","_map","txt","flipY","repeat","wrapS","RepeatWrapping","wrapT","_handleMapVsCustom","indexOf","attach","aoMap","alphaMap","normalMap","normalScale","Vector2","normalIntensity","transparent","shininess","onUpdate","self","needsUpdate","length","metalness","metallic","roughness","config","roughnessMap","parseName","name","split","join","productSetActivePart","type","PRODUCT_SET_ACTIVE","payload","productSetTextureToActive","PRODUCT_SET_TEXTURE","productSetColorToActive","hex","PRODUCT_SET_COLOR","productAddModelData","data","PRODUCT_ADD_MODEL_DATA","productApplyCustomImage","PRODUCT_APPLY_CUSTOM_IMAGE","destroyCustomTextureFromActive","productSetStampaColor","PRODUCT_SET_STAMPA_COLOR","productSetStampaPos","PRODUCT_SET_STAMPA_POS","productSetStampaStyle","PRODUCT_SET_STAMPA_STYLE","interfaceToggleModal","INTERFACE_TOGGLE_MODAL","interfaceSetActiveStage","INTERFACE_SET_ACTIVE_STAGE","interfaceGetPointerPosition","interface","pointer","interfaceGetModalState","modalIsOpen","interfaceGetActiveStage","currentStage","Part","materialUid","mesh","locked","dispatch","useDispatch","disabled","setDisabled","downX","x","downY","y","_handlePointerDown","e","clientX","clientY","Math","floor","INTERFACE_UPDATE_POINTER","_handlePointerUp","setTimeout","fallback","geometry","wireframe","renderOrder","onPointerDown","onPointerUp","castShadow","receiveShadow","Product","file","rotation","shadowMaterial","stampaMaterial","stampas","meshPart","uuid","part","s","current_material","custom_texture","children","child","parent","_filter","shadowMesh","allowedParts","cameraControlsConfig","enableDampening","dampeningFactor","enableZoom","maxPolarAngle","minPolarAngle","enablePan","extend","OrbitControls","CameraControls","useThree","camera","domElement","gl","controls","useRef","useFrame","current","update","ref","args","enableDamping","dampingFactor","MathUtils","degToRad","World","model","nodes","useGLTF","sceneId","PRODUCT_ADD_MESHPARTS","productAddMeshParts","antialias","preserveDrawingBuffer","onCreated","toneMappingExposure","setClearColor","outputEncoding","GammaEncoding","physicallyCorrectLights","shadowMap","enabled","PCFSoftShadowMap","toneMapping","NoToneMapping","pixelRatio","devicePixelRatio","concurrent","raycaster","intersections","groundColor","Color","light","idx","store","multisampling","luminanceInfluence","radius","scale","bias","distanceThreshold","distanceFalloff","rangeFalloff","mockProductData","require","mockTextureData","SwatchTrayDiv","IconDiv","svgs","fill","xmlns","viewBox","d","right","menu","stroke","strokeWidth","strokeMiterlimit","strokeLinecap","check","logo","green","points","Icon","icon","CheckmarkDiv","spacing","mint","white","Checkmark","SwatchDiv","props","breakpoints","lg","Swatch","label","onClick","LetterInitialDiv","blue","LetterInitial","letter","toUpperCase","alt","SwatchTray","ACTIVE_PRODUCT","ACTIVE_MATERIALS","ACTIVE_SECTION","STAMPAS","STAMPA_POS","SWATCHES","swatches","ACTIVE_STAGE","alphabet","pos","PRODUCT_SET_STAMPA","swatch","_genSelectorTheme","gray","SelectorDiv","md","SelectorMenu","SelectorTitle","textSize","sm","space","base","SelectorArrows","SelectorArrow","SelectorList","ul","boxShadow","xlTop","SelectorListItem","li","Selector","intl","useIntl","activeSection","menuOpen","setMenuOpen","CURRENT","AVAILABLE","available_materials","_handleCycleSelector","direction","findIndex","avail","_handleToggleMenu","prev","className","formatMessage","SectionSelector","ControlPanelDiv","ControlPanel","ImageEditorDiv","ImageEditorButtonTrayDiv","ImageEditorFontSelector","select","ImageEditorColorPicker","ImageEditorColorHouse","UploadArea","draggingOver","LabelPill","input","ErrorPanel","rose","UploadFormlet","handleUpload","handleClick","target","value","onChange","files","style","display","htmlFor","ImageUpload","error","handleFileUpload","clearError","setDraggingOver","onDragOver","preventDefault","onDragEnter","onDragLeave","onDrop","dataTransfer","UploadContainer","uploadImage","setError","test","size","message","handleAllowedFiles","File","url","_genButtonTheme","ButtonEl","button","block","align","boldupper","big","xl","Button","minimal","ModalDiv","ModalInnerDiv","Modal","isOpen","ImageEditor","editor","setEditor","uniq","customImageUrl","modalState","dispose","_handleCloseCustomImageModal","status","_generateCustomTexture","multiplier","objectUrl","_handleUpload","PRODUCT_SET_CUSTOM_IMAGE","_clearCustomTexture","PRODUCT_CLEAR_CUSTOM_IMAGE","_destroyCustomTexture","TextEditor","lastSubmittedText","setLastSubmittedText","textNode","setTextNode","textColor","setTextColor","colorPickerOpen","setColorPickerOpen","text","IText","padding","fontFamily","enterEditing","setActiveObject","renderAll","flex","event","font","borderRadius","marginTop","SelectorTrayDiv","SelectorTray","StageSelectorSidebarDiv","StageSelectorSidebar","StageSelectorDiv","StageSelectorAccent","StageSelector","LoadingOverlayDiv","LoadingOverlay","StampaColorPickerDiv","StampaColorPickerPalette","StampaColorPicker","setIsOpen","ScaffoldInitialsButtonsDiv","ScaffoldInitialsButtons","App","MODEL_PATH","currentActiveStage","getState","a","json","shapeTextureData","textures","PRODUCT_ADD_MATERIALS","catch","console","languages","en","messages","it","italianMessages","locale","_get","global","ReactDOM","render","StrictMode","getElementById","PRODUCT_SET_TEXTURE_TO_TAG","Preflight","createGlobalStyle","1","2","3","4","5","6","7","8","9","10","12","14","16","20","24","none","full","xxl","xs","blueGray","50","100","200","300","400","500","600","700","800","900","coolGray","trueGray","warmGray","red","indigo","orange","inner","isMaskedShadow","entry","title","slug","rendered","acf","texture_file","texture_maps_included","material_attributes","normal_intensity","shapeSectionData","initial_material","initial_texture","ID","post_name","post_title","model_tag","available_textures","at","initialState","loadingMeshParts","loadingModelData","loadingMaterials","customText","rootReducer","combineReducers","action","newSectionsWithMeshParts","newSec","meshByIdOrParentOrChildren","newSectionsNewActive","ns","newMaterial","newActiveSections","toLowerCase","newColorSections","model_file","shadow_file","shadow_material","rest","newActive","newStampas","mat","stampaMat","restMats","newStampaMat","newMats","newModals","modal","key","configureStore","reducer"],"mappings":"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","file":"static/js/main.7148cc88.chunk.js","sourcesContent":["import { colors } from \"../theme\";\n\ntype Point = [x: number, y: number, z: number];\ninterface Light {\n    id: string;\n    color: string;\n    position: [x: number, y: number, z: number];\n    mapSize: number,\n    intensity: number,\n    shadows: boolean\n}\n\ninterface WorldConfig {\n    backgroundColor: string;\n    effects: boolean;\n    worldOffset: Point;\n    lighting: Light[];\n}\n\nconst spotlightIntensity = 10; // 10;\nconst spotlightDistance = 10; // 10;\nconst spotlightHeightReduction = 3; // 3;\nconst spotlightHeight = spotlightDistance - spotlightHeightReduction;\n\n\nconst worldConfig: WorldConfig = {\n    backgroundColor: colors.brand.offwhite,\n    effects: false,\n    worldOffset: [0, -0.33, 0],\n    lighting:  [\n        /**\n         * Top spotlight\n         */\n        {\n          id: 'spot',\n          color: '#FFFFFF',\n          position: [0, spotlightDistance + spotlightHeightReduction, 0],\n          intensity: spotlightIntensity - spotlightIntensity / 3,\n          mapSize: 1024,\n          shadows: false,\n        },\n\n        /**\n         * Inner spotlight\n         */\n        {\n          id: 'spot',\n          color: '#FFFFFF',\n          position: [spotlightDistance, spotlightHeight, 0],\n          intensity: spotlightIntensity,\n          mapSize: 1024,\n          shadows: false,\n        },\n        /**\n         * Outer spotlight\n         */\n        {\n          id: 'spot',\n          color: '#FFFFFF',\n          position: [spotlightDistance * -1, spotlightHeight, 0 ],\n          intensity: spotlightIntensity,\n          mapSize: 1024,\n          shadows: false,\n        },\n        /**\n         * Front spotlight\n         */\n        {\n          id: 'spot',\n          color: '#FFFFFF',\n          position: [0, spotlightHeight, spotlightDistance],\n          intensity: spotlightIntensity,\n          mapSize: 1024,\n          shadows: false,\n        },\n        /**\n         * Rear spotlight\n         */\n        {\n          id: 'spot',\n          color: '#FFFFFF',\n          position: [0, spotlightHeight, spotlightDistance * -1],\n          intensity: spotlightIntensity,\n          mapSize: 1024,\n          shadows: false,\n        },\n      ],\n}\n\nexport default worldConfig;","interface CameraConfig {\n    fov: number,\n    near: number,\n    far: number,\n    position: [x: number, y: number, z: number]\n}\n\nconst cameraConfig: CameraConfig = {\n    fov: 30,\n    near: 1,\n    far: 300,\n    position: [-3, 0, 2],\n  };\n\n  export default cameraConfig;","import styled from 'styled-components';\n\nexport const WorldDiv = styled.div`\n    height: 100%;\n    width: 100%;\n`","import { RootState } from '../index';\n\nexport const getIsLoading = (state: RootState) => state.product.loadingMeshParts && state.product.loadingMaterials && state.product.loadingModelData;\n\nexport const getAllProductMeshParts = (state: RootState) => state.product.meshParts;\n\nexport const getActiveProductPart = (state: RootState) => {\n    const active = state.product.sections.filter(section => section.active)[0];\n    return active;\n}\n\nexport const getAllMaterials = (state: RootState) => state.product.materials;\nexport const getAllSections = (state: RootState) => state.product.sections;\nexport const getActiveSection = (state: RootState) => state.product.sections.filter(section => section.active);\nexport const getProductModelPath = (state: RootState) => state.product.src;\nexport const getMaterialByUid = (uid: number | null) => (state: RootState) => state.product.materials.filter(material => material.uid === uid)[0];\nexport const getMaterialByTag = (tag: string | null) => (state: RootState) => state.product.materials.filter(material => material.tag === tag)[0];\nexport const getProductDataByType = (type: string) => (state: RootState) => state.product[type];\nexport const getProductCustomImage = (state: RootState) => state.product.customImage;\nexport const getProductStampas = (state: RootState) => state.product.stampa;\nexport const getProductStampaColor = (state: RootState) => state.product.stampaColor;\nexport const getProductStampaPos = (state: RootState) => state.product.stampaPos;\nexport const getProductStampaStyle = (state: RootState) => state.product.stampaStyle;","const brandConfig = {\n    hoverColor: '#1c894a'\n}\n\nexport default brandConfig;","import React, {useState, useEffect} from 'react';\nimport {useCubeTexture} from 'drei';\nimport { CustomMaterialProps } from './types';\nimport {useTexture} from 'drei';\nimport {fabric} from 'fabric';\nimport { Vector2, RepeatWrapping, Texture } from 'three';\nimport config from '../../config/brandConfig';\nimport _map from 'lodash/map';\nimport { useSelector } from 'react-redux';\nimport { getMaterialByUid } from '../../store/product/selectors';\n\nconst multiplyMaterialsTogether = (customBlob: string, baseTexture: string) => {\n    const dimensions = 1024;\n    const proxy = document.createElement('canvas');\n    proxy.id = 'proxyCanvas';\n    proxy.width = dimensions;\n    proxy.height = dimensions;\n\n    return new Promise<string>((res, rej) => {\n        const canvas = new fabric.Canvas('proxyCanvas');\n        canvas.setDimensions({width:dimensions, height:dimensions});\n    \n        fabric.Image.fromURL(baseTexture, (filt) => {\n\n            filt.scaleToWidth(dimensions);\n\n            const filter = new fabric.Image.filters.BlendImage({\n              image: filt,\n              mode: \"multiply\",\n              alpha: 0.5,\n            });\n\n            fabric.Image.fromURL(customBlob, image => {\n                image.scaleToWidth(dimensions);\n                const customImage = image.set({left: 0, top: 0});\n                if (filter) {\n                    (customImage as any).filters.push(filter);\n                    (customImage as any).applyFilters();\n                }\n                canvas.add(customImage);\n                const comped = canvas.toDataURL();\n\n                fetch(comped)\n                .then(u => u.blob())\n                .then(window.URL.createObjectURL)\n                .then(res);\n            })\n        });\n    });\n}\n\n/**\n * \n * @param uid – the material uid\n */\n\nconst CustomMaterial: React.FC<CustomMaterialProps> = ({uid, color, customTexture, override}) => {\n\n    const material = useSelector(getMaterialByUid(uid));\n    const [compedCustomTexture, setCompedCustomTexture] = useState<string | null>(null);\n    const envMap = useCubeTexture(['px.png', 'nx.png', 'py.png', 'ny.png', 'pz.png', 'nz.png'], { path: '/cubemap/medium-studio/' });\n    const maps = material && [...material.maps, 'custom'];\n\n    useEffect(() => {\n        if (customTexture) {\n            if (material.maps.includes('color'))\n            {\n                multiplyMaterialsTogether(customTexture, `${material.src}/color.jpg`)\n                .then(res => setCompedCustomTexture(res));\n            } else {\n            setCompedCustomTexture(customTexture);\n            }\n        } else {\n            setCompedCustomTexture(null);\n        }\n    }, [customTexture, material]);\n\n\n    // Convert to texture image paths\n        const paths = maps.map(texture => {\n            let fileName = override && override.hasOwnProperty(texture) ? override[texture] : texture;\n            if (fileName === 'custom')\n                return compedCustomTexture ? compedCustomTexture : '';\n             return `${material.src}/${fileName}.jpg`\n        }).filter(Boolean);\n\n    // Load all the textures (useTexture returns an array)\n    let texture: Texture[] | null = useTexture(paths);\n\n    // Convert texture array to an object where the key === the index position of the map array\n    let textureObj = Object.assign({}, texture);\n\n    // Flip the textures if needed \n    // if (material.flipY)\n      _map(textureObj, txt => {txt.flipY = false});\n        \n    \n    // Set more texture values\n    _map(textureObj, txt => {\n        material.repeat && txt.repeat.set(material.repeat, material.repeat);\n        txt.wrapS = RepeatWrapping;\n        txt.wrapT = RepeatWrapping;\n        return txt;\n    });\n\n    const _handleMapVsCustom = () => {\n        switch(true) {\n            case !!compedCustomTexture: \n                return textureObj[maps.indexOf('custom')];\n            case maps.includes('color'):\n                return textureObj[maps.indexOf('color')];\n            default:\n                return null;\n        }\n\n    }\n\n    const _getTexture = () => (\n        <meshStandardMaterial\n            attach=\"material\"\n            color={compedCustomTexture ? color === config.hoverColor ? config.hoverColor : '#FFFFFF' : color}\n            map={_handleMapVsCustom()}\n            aoMap={maps.includes('ao') ? textureObj[maps.indexOf('ao')] : null}\n            roughnessMap={maps.includes('roughness') ? textureObj[maps.indexOf('roughness')] : null}\n            alphaMap={maps.includes('alpha') ? textureObj[maps.indexOf('alpha')] : null}\n            normalMap={maps.includes('normal') ? textureObj[maps.indexOf('normal')] : null}\n            normalScale={new Vector2(material.normalIntensity, material.normalIntensity)}\n            transparent={true}\n            onUpdate={(self) => (self.needsUpdate = true)}\n        />);\n\n    /**\n     * @TODO Ground shadow\n     */\n    const _getGroundShadow = () => (\n        <meshPhongMaterial\n            attach=\"material\"\n            color={color}\n            map={(maps.includes('color') ? textureObj[maps.indexOf('color')] : null)}\n            aoMap={maps.includes('ao') ? textureObj[maps.indexOf('ao')] : null}\n            alphaMap={maps.includes('alpha') ? textureObj[maps.indexOf('alpha')] : null}\n            normalMap={maps.includes('normal') ? textureObj[maps.indexOf('normal')] : null}\n            normalScale={new Vector2(material.normalIntensity, material.normalIntensity)}\n            transparent={true}\n            shininess={0}\n            onUpdate={(self) => (self.needsUpdate = true)}\n        />\n    );\n\n    const _getNonTexturedMaterial = () => (\n        <meshPhysicalMaterial\n            attach=\"material\"\n            color={color}\n            metalness={material.metallic ? 1 : 0}\n            roughness={0}\n            envMap={envMap}\n        />\n    );\n\n    switch(true) {\n        case(maps.includes('alpha')) :\n            return _getGroundShadow();\n        case(maps.length === 0) :\n            return _getNonTexturedMaterial();\n        default :\n            return _getTexture();\n    }\n\n};\n\nexport default CustomMaterial;","import { Mesh } from 'three';\nimport _map from 'lodash/map';\nimport { PRODUCT_ADD_MESHPARTS, PRODUCT_SET_STAMPA_COLOR, PRODUCT_SET_STAMPA_POS, PRODUCT_SET_STAMPA_STYLE, PRODUCT_SET_ACTIVE, PRODUCT_SET_TEXTURE_TO_TAG, PRODUCT_SET_CUSTOM_IMAGE, PRODUCT_CLEAR_CUSTOM_IMAGE, PRODUCT_APPLY_CUSTOM_IMAGE, PRODUCT_SET_TEXTURE, PRODUCT_SET_COLOR, productActionTypes, productPartType, PRODUCT_ADD_MATERIALS, PRODUCT_ADD_MODEL_DATA, PRODUCT_SET_STAMPA } from './types';\n\n/**\n * \n * Helpers\n */\nconst parseName = (name: string) => {\n    const label = name.split('|')[0];\n    const readable = label.split('_');\n    return readable.join(' ');\n}\n\nconst parseTag = (name: string) => {\n    return name.split('|')[0];\n}\n\n/**\n * \n * MeshParts\n */\n\nexport function productAddMeshParts(data: any): productActionTypes {\n\n    const { sceneId } = data; \n\n    const meshParts: productPartType[] = _map(data.meshParts, (part: Mesh) => {\n        return {\n            id: part.uuid,\n            tag: parseTag(part.name),\n            name: parseName(part.name),\n            parent: part.parent && part.parent.uuid !== sceneId ? part.parent.uuid : null,\n            children: part.children.map(child => child.uuid),\n            locked: part.name.includes('|disable'),\n        } as productPartType\n    })\n\n    return {\n        type: PRODUCT_ADD_MESHPARTS,\n        payload: meshParts\n    }\n}\n\nexport function productSetActivePart(id: string) {\n    return {\n        type: PRODUCT_SET_ACTIVE,\n        payload: id\n    }\n}\n\nexport function productSetTextureToActive(uid: string | number) {\n    return {\n        type: PRODUCT_SET_TEXTURE,\n        payload: uid\n    }\n}\n\nexport function productSetTextureToSectionByTag(tag: string) {\n    return {\n        type: PRODUCT_SET_TEXTURE_TO_TAG,\n        payload: tag\n    }\n}\n\nexport function productSetColorToActive(hex: string) {\n    return {\n        type: PRODUCT_SET_COLOR,\n        payload: hex\n    }\n}\n\nexport function productAddMaterials(data: any): productActionTypes {\n    return {\n        type: PRODUCT_ADD_MATERIALS,\n        payload: data\n    }\n}\n\nexport function productAddModelData(data: any): productActionTypes {\n    return {\n        type: PRODUCT_ADD_MODEL_DATA,\n        payload: data\n    }\n}\n\nexport function productSetCustomImage(data: any): productActionTypes {\n    return {\n        type: PRODUCT_SET_CUSTOM_IMAGE,\n        payload: data\n    }\n}\n\nexport function productClearCustomImage(): any {\n    return {\n        type: PRODUCT_CLEAR_CUSTOM_IMAGE\n    }\n}\n\nexport function productApplyCustomImage(data: string): productActionTypes {\n    return {\n        type: PRODUCT_APPLY_CUSTOM_IMAGE,\n        payload: data\n    }\n}\n\nexport function destroyCustomTextureFromActive(): any {\n    return {\n        type: PRODUCT_APPLY_CUSTOM_IMAGE,\n        payload: null\n    }\n}\n\nexport function productSetStampa(data: {pos: '1' | '2', letter: string}): productActionTypes {\n    return {\n        type: PRODUCT_SET_STAMPA,\n        payload: data\n    }\n}\n\nexport function productSetStampaColor(data: string): productActionTypes {\n    return {\n        type: PRODUCT_SET_STAMPA_COLOR,\n        payload: data\n    }\n}\n\nexport function productSetStampaPos(data: '1' | '2'): productActionTypes {\n    return {\n        type: PRODUCT_SET_STAMPA_POS,\n        payload: data\n    }\n}\n\nexport function productSetStampaStyle(data: 'printed' | 'stitched'): productActionTypes {\n    return {\n        type: PRODUCT_SET_STAMPA_STYLE,\n        payload: data\n    }\n}","import { INTERFACE_UPDATE_POINTER, INTERFACE_SET_ACTIVE_STAGE, INTERFACE_TOGGLE_MODAL, interfaceActionTypes } from './types';\n\nexport function interfaceUpdatePointer(data: any): interfaceActionTypes {\n    return {\n        type: INTERFACE_UPDATE_POINTER,\n        payload: data\n    }\n}\n\nexport function interfaceToggleModal(data: {id: string; status: 'open' | 'closed'}): interfaceActionTypes {\n    return {\n        type: INTERFACE_TOGGLE_MODAL,\n        payload: data\n    }\n}\n\nexport function interfaceSetActiveStage(data: string): interfaceActionTypes {\n    return {\n        type: INTERFACE_SET_ACTIVE_STAGE,\n        payload: data\n    }\n}","import { RootState } from '../index';\n\nexport const getAllInterfaceData = (state: RootState) => state.interface;\nexport const interfaceGetPointerPosition = (state: RootState) => state.interface.pointer;\nexport const interfaceGetModalState = (id: string) => (state: RootState) => state.interface.modalIsOpen[id];\nexport const interfaceGetActiveStage = (state: RootState) => state.interface.currentStage;","import React, {Suspense, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { PartProps } from './types';\nimport CustomMaterial from '../CustomMaterial';\nimport config from '../../config/brandConfig';\nimport { productSetActivePart, productSetColorToActive } from '../../store/product/actions';\nimport {interfaceUpdatePointer} from '../../store/interface/actions';\nimport {interfaceGetPointerPosition} from '../../store/interface/selectors';\n\nconst Part: React.FC<PartProps> = ({materialUid, color, mesh, tag, locked, id, customTexture, override}) => {\n\n    const dispatch = useDispatch();\n    // Disable stops the user from clicking on the item until the color has returned to default\n    // This stops the user being able to lock in the hoverColor\n    const [disabled, setDisabled] = useState(false);\n    const {x: downX, y: downY} = useSelector(interfaceGetPointerPosition);\n\n    const _handleSetActive = () => {\n        setDisabled(true);\n        dispatch(productSetActivePart(id));\n        dispatch(productSetColorToActive(config.hoverColor));\n        setTimeout(() => {\n            dispatch(productSetColorToActive(color));\n            setDisabled(false);\n        }, 200);\n    }\n    const _handlePointerDown = (e: React.PointerEvent<Element>) => {\n        const {clientX: x, clientY: y} = e;\n        dispatch(interfaceUpdatePointer({x: Math.floor(x), y: Math.floor(y)}));\n    }\n\n    const _handlePointerUp = (e: React.PointerEvent<Element>) => {\n        // This determines whether the user dragged or intended to click\n        const {clientX: x, clientY: y} = e;\n        if (Math.floor(x) === downX && Math.floor(y) === downY)\n            _handleSetActive();\n    }\n\n    return (\n        <Suspense fallback={\n            (\n            <mesh\n            geometry={mesh.geometry}\n            >\n                <meshBasicMaterial color={'#FFFFFF'} wireframe/>\n            </mesh>\n            )\n        }>\n            <mesh\n                renderOrder={tag === 'stampa_1' || tag === 'stampa_2' ? 1 : 0}\n                onPointerDown={(e) => !locked && !disabled && _handlePointerDown(e)}\n                onPointerUp={(e) => !locked && !disabled && _handlePointerUp(e)}\n                key={id} geometry={mesh.geometry} castShadow={false} receiveShadow={false}>\n                    { materialUid && (\n                        <CustomMaterial override={override} customTexture={customTexture} color={ color } uid={materialUid} />\n                    ) }\n            </mesh>\n        </Suspense>\n    );\n};\n\nexport default Part;","import React from 'react';\nimport _map from 'lodash/map';\nimport _filter from 'lodash/filter';\nimport { useSelector} from 'react-redux';\nimport worldConfig from '../../config/worldConfig';\nimport { ProductProps } from './types';\nimport { getAllProductMeshParts, getAllSections, getMaterialByTag, getProductStampaColor, getProductStampas } from '../../store/product/selectors';\nimport Part from '../Part';\n\nconst Product: React.FC<ProductProps> = ({file, rotation = [0, 0, 0]}) => {\n\n    const meshParts = useSelector(getAllProductMeshParts);\n    const sections = useSelector(getAllSections);\n    const shadowMaterial = useSelector(getMaterialByTag('shadow'));\n    const stampaMaterial = useSelector(getMaterialByTag('stampa'));\n    const stampas = useSelector(getProductStampas);\n    const stampaColor = useSelector(getProductStampaColor);\n\n    return (        \n            <group position={worldConfig.worldOffset} rotation={rotation}>\n                {\n                    /**\n                     * Add top level mesh parts\n                     */\n                    _map(file, (mesh: any) => {\n                        const [part] = meshParts.filter(meshPart => meshPart.id === mesh.uuid);\n                        const [section] = sections.filter(s => s.meshPart === mesh.uuid);\n                        if (!part || !section) return null;\n                        const {locked, id} = part;\n                        const {current_material, custom_texture, color} = section;\n                        return <Part key={id} id={id} customTexture={custom_texture} locked={locked} mesh={mesh} materialUid={current_material.uid} color={color} />;\n                    })\n                }\n                {\n                    /**\n                     * Add children of top level mesh parts\n                     */\n                    _map(file, (mesh: any) => {\n                       return mesh.children.map((child: any) => {\n                            const [part] = meshParts.filter(meshPart => meshPart.id === child.parent.uuid);\n                            const [section] = sections.filter(s => s.meshPart === child.parent.uuid);\n                            if (!part || !section) return null;\n                            const {locked, id} = part;\n                            const {current_material, custom_texture, color} = section;\n                            return <Part key={id} id={id} customTexture={custom_texture} locked={locked} mesh={child} materialUid={current_material.uid} color={color} />;\n                        });\n                    })\n                }\n                {\n                    /**\n                     * Add the ground shadow\n                     */\n                    _map(meshParts, (part: any) => {\n                        const {locked, id} = part;\n                        const [shadowMesh] = _filter(file, (mesh: any) => mesh.name === 'shadow|disable');\n                        if (part.tag !== 'shadow')\n                            return null;\n                        return <Part key={id} id={id} locked={locked} mesh={shadowMesh} materialUid={shadowMaterial.uid} color={'#000000'} />;\n                    })\n                }\n                {\n                    /**\n                     * Add stampa parts\n                     */\n                    _map(file, (mesh: any) => {\n                        const allowedParts = [];\n                        if (stampas[1])\n                            allowedParts.push('stampa_1');\n                        if (stampas[2])\n                            allowedParts.push('stampa_2')\n                        const [part] = meshParts.filter(meshPart => meshPart.id === mesh.uuid);\n                        if (!part) return null;\n                        const {locked, id, tag} = part;\n                        const custom_texture = '';\n                        if (!allowedParts.includes(tag))\n                            return null;\n                        return <Part key={id} tag={tag} id={id} override={{\n                            alpha: tag === 'stampa_1' ? `/alpha/stampa-${stampas[1]}` : `/alpha/stampa-${stampas[2]}`,\n                        }} customTexture={custom_texture} locked={locked} mesh={mesh} materialUid={stampaMaterial.uid} color={stampaColor} />;\n                    })\n                }\n\n            </group>\n    );\n};\n\nexport default Product;","const cameraControlsConfig = {\n    enableDampening: true,\n    dampeningFactor: 0.1,\n    enableZoom: true,\n    maxPolarAngle: 85,\n    minPolarAngle: 0,\n    enablePan: false,\n}\n\nexport default cameraControlsConfig;","import React, {useRef} from 'react';\nimport {MathUtils} from 'three';\nimport { CameraControlsProps } from './types';\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {extend, useFrame, ReactThreeFiber, useThree} from 'react-three-fiber';\nimport config from '../../config/cameraControlsConfig';\n\nextend({ OrbitControls });\n\ndeclare global {\n    namespace JSX {\n      interface IntrinsicElements {\n        'orbitControls': ReactThreeFiber.Object3DNode<OrbitControls, typeof OrbitControls>;\n      }\n    }\n  }\n\nconst CameraControls: React.FC<CameraControlsProps> = () => {\n\n      const {enableDampening, enablePan, dampeningFactor, enableZoom, maxPolarAngle, minPolarAngle} = config;\n\n      const {\n        camera,\n        gl: { domElement }\n    } = useThree();\n\n\n    // Ref to the controls, so that we can update them on every frame using useFrame\n    const controls = useRef<OrbitControls | null>();\n    useFrame(state => controls.current && controls.current.update());\n\n    return (\n        <orbitControls\n        ref={controls}\n        args={[camera, domElement]}\n        enableZoom={enableZoom}\n        enableDamping={enableDampening}\n        dampingFactor={dampeningFactor}\n        enablePan={enablePan}\n        maxPolarAngle={MathUtils.degToRad(maxPolarAngle)}\n        minPolarAngle={MathUtils.degToRad(minPolarAngle)}\n        />\n    );\n};\n\nexport default CameraControls;","import React, {Suspense, useEffect} from 'react';\nimport {Canvas, useResource} from 'react-three-fiber';\nimport {useDispatch, Provider } from 'react-redux';\nimport { EffectComposer, SSAO, SMAA } from 'react-postprocessing';\nimport _filter from 'lodash/filter';\nimport { useGLTF } from 'drei';\nimport {Color, GammaEncoding, LinearToneMapping, NoToneMapping, PCFSoftShadowMap} from 'three';\nimport worldConfig from '../../config/worldConfig';\nimport cameraConfig from '../../config/cameraConfig';\nimport {WorldDiv} from './styles/WorldStyles';\nimport { WorldProps } from './types';\nimport Product from '../Product';\nimport CameraControls from '../CameraControls';\nimport { productAddMeshParts } from '../../store/product/actions';\nimport {store} from '../../store';\n\nconst World: React.FC<WorldProps> = ({model}) => {\n    const dispatch = useDispatch();\n    \n    /**\n     * Data\n     */\n    const { effects, lighting } = worldConfig;\n    const { nodes } = useGLTF(model);\n    \n    /**\n     * State\n     */\n\n    useEffect(() => {\n        const meshParts = _filter(nodes, part => part.name !== 'Scene' );\n        const sceneId = _filter(nodes, part => part.name === 'Scene')[0].uuid;\n        dispatch(productAddMeshParts({meshParts, sceneId}));\n    }, [dispatch, nodes]);\n    \n\n    /**\n     * Methods\n     * @private\n     */\n\n    const _intersectionsFilter = (intersections: any) => {\n        return intersections?.length ? [intersections[0]] : intersections;\n    }\n\n    const _renderEffectComposer = () => (\n        <EffectComposer multisampling={2}>\n            <SSAO\n            intensity={20}\n            luminanceInfluence={0.2}\n            radius={8}\n            scale={0.5}\n            bias={0.5}\n            distanceThreshold={0.5}\n            distanceFalloff={0.03}\n            rangeFalloff={0.001}\n            />\n            <SMAA />\n        </EffectComposer>\n    );\n    \n\n    if (!nodes)\n        return null;\n\n    return (    \n        <WorldDiv>\n            <Canvas\n                gl={{\n                    antialias: true,\n                    preserveDrawingBuffer: true,\n                    alpha: false\n                }}\n                onCreated={({gl}) => {\n                    gl.toneMappingExposure = 1;\n                    gl.setClearColor(worldConfig.backgroundColor);\n                    gl.outputEncoding = GammaEncoding;\n                    gl.physicallyCorrectLights = true;\n                    gl.shadowMap.enabled = true;\n                    gl.shadowMap.type = PCFSoftShadowMap;\n                    gl.toneMapping = NoToneMapping;\n                    \n                }}\n                pixelRatio={window.devicePixelRatio > 2 ? 2 : window.devicePixelRatio}\n                concurrent={true}\n                raycaster={{ filter: _intersectionsFilter }}\n                camera={{ fov: cameraConfig.fov, position: cameraConfig.position }}\n            >\n                {/** Scene */}\n                <CameraControls />\n                <hemisphereLight intensity={0.66} groundColor={new Color('#FFFFFF')} position={[0, 50, 0]} />\n                {lighting.map((light, idx) => (\n                    <spotLight\n                        key={idx}\n                        color={light.color}\n                        position={light.position}\n                        intensity={light.intensity}\n                        castShadow={false}\n                    />\n                ))}\n                \n                {/** Model */}\n                <Provider store={store}>\n                    <Suspense fallback={<p>Creating something awesome...</p>}>\n                        <Product file={nodes} rotation={[0, 0, 0]} />\n                    </Suspense>\n                </Provider>\n                {/** Effects */}\n                {effects && _renderEffectComposer()}\n                \n            </Canvas>\n        </WorldDiv>\n    );\n};\n\nexport default World;","import { ThunkAction } from \"@reduxjs/toolkit\";\nimport {Action, Dispatch} from 'redux';\nimport {GetState, RootState} from '../../store';\nimport {productAddMaterials, productAddModelData} from './actions';\nimport {shapeTextureData} from '../../utils';\nconst mockProductData = require('../../mock/product.json');\nconst mockTextureData = require('../../mock/texture.json');\n\nexport const thunkProductLoadMaterials = (): ThunkAction<void, RootState, unknown, Action<string>> => async(dispatch: Dispatch, getState: GetState) => {\n    // fetch('http://192.168.1.2/wp-json/wp/v2/texture')\n    fetch('https://jsonplaceholder.typicode.com/todos/100')\n    .then(res => res.json())\n    .then(data => shapeTextureData(mockTextureData))\n    .then(textures => {\n        dispatch(productAddMaterials([{\n            uid: -2,\n            tag: 'stampa',\n            src: '/stampa',\n            maps: ['alpha'],\n            normalIntensity: 3,\n            flipY: true,\n            swatches: [],\n            metallic: false,\n        }, ...textures])\n    )})\n    .catch(error => console.error('thunkProductLoadMaterials was not successful', error));\n}\n\nexport const thunkProductLoadModel = (): ThunkAction<void, RootState, unknown, Action<string>> => async(dispatch: Dispatch, getState: GetState) => {\n    // fetch('http://192.168.1.2/wp-json/wp/v2/custom/51')\n    fetch('https://jsonplaceholder.typicode.com/todos/100')\n    .then(res => res.json())\n    .then(data => dispatch(productAddModelData(mockProductData)))\n    .catch(error => console.error('thunkProductLoadModel was not successful', error));\n}","import styled from 'styled-components';\nimport { SwatchTrayProps } from '../types';\n\nexport const SwatchTrayDiv = styled.div<SwatchTrayProps>`\n    display: flex;\n    overflow-x: auto;\n`","import styled from 'styled-components';\n\nexport const IconDiv = styled.div`\n    \n`","import React from 'react';\nimport {IconDiv} from './styles/IconStyles';\nimport { IconProps } from './types';\nimport {colors} from '../../theme';\n\nconst svgs = {\n    left: <svg fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"10\" viewBox=\"0 0 15 15\">\n        <path d=\"M12,13.45a.62.62,0,0,0,.09-.32V1.88A.63.63,0,0,0,12,1.55a.59.59,0,0,0-.24-.23.64.64,0,0,0-.33-.07.72.72,0,0,0-.32.11L3,7a.53.53,0,0,0-.2.22.64.64,0,0,0,0,.58A.53.53,0,0,0,3,8l8.12,5.63a.72.72,0,0,0,.32.11.64.64,0,0,0,.33-.07A.59.59,0,0,0,12,13.45Z\"/>\n    </svg>,  \n    right:  <svg width=\"10\" height=\"10\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M3.46 13.6788C3.5611 13.7313 3.67462 13.7554 3.78836 13.7484C3.90211 13.7413 4.01179 13.7034 4.10562 13.6388L12.2306 8.01375C12.3136 7.95623 12.3815 7.87945 12.4284 7.78998C12.4752 7.7005 12.4997 7.60101 12.4997 7.5C12.4997 7.399 12.4752 7.2995 12.4284 7.21003C12.3815 7.12056 12.3136 7.04377 12.2306 6.98625L4.10562 1.36125C4.01186 1.29637 3.90213 1.25838 3.78832 1.25139C3.67451 1.2444 3.56096 1.26867 3.45996 1.32159C3.35895 1.3745 3.27435 1.45404 3.21531 1.55159C3.15627 1.64914 3.12504 1.76098 3.125 1.875V13.125C3.12498 13.2391 3.15619 13.351 3.21524 13.4486C3.27429 13.5462 3.35894 13.6258 3.46 13.6788Z\" fill=\"black\"/>\n    </svg>,\n    menu: <svg width=\"28\" height=\"21\" viewBox=\"0 0 28 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M4.8125 6.23438H23.1875\" stroke=\"black\" strokeWidth=\"2\" strokeMiterlimit=\"10\" strokeLinecap=\"round\"/>\n    <path d=\"M4.8125 10.5H23.1875\" stroke=\"black\" strokeWidth=\"2\" strokeMiterlimit=\"10\" strokeLinecap=\"round\"/>\n    <path d=\"M4.8125 14.7656H23.1875\" stroke=\"black\" strokeWidth=\"2\" strokeMiterlimit=\"10\" strokeLinecap=\"round\"/>\n    </svg>,\n    check: <svg width=\"12\" height=\"10\" viewBox=\"0 0 9 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M6.97001 0.969986C7.11087 0.835875 7.29833 0.761733 7.49282 0.763205C7.68732 0.764677 7.87363 0.841647 8.01245 0.977874C8.15127 1.1141 8.23175 1.29893 8.23689 1.49336C8.24203 1.68779 8.17143 1.87661 8.04001 2.01999L4.05001 7.00999C3.9814 7.08389 3.89859 7.14319 3.80654 7.18435C3.71448 7.22552 3.61508 7.2477 3.51426 7.24956C3.41344 7.25143 3.31328 7.23295 3.21976 7.19522C3.12625 7.15749 3.0413 7.10129 2.97001 7.02999L0.324005 4.38399C0.250318 4.31532 0.191216 4.23252 0.150224 4.14052C0.109232 4.04853 0.0871901 3.94921 0.0854134 3.84851C0.0836366 3.74781 0.102161 3.64778 0.139882 3.55439C0.177603 3.461 0.233748 3.37617 0.304967 3.30495C0.376186 3.23373 0.461019 3.17758 0.554407 3.13986C0.647796 3.10214 0.747825 3.08362 0.848528 3.08539C0.949231 3.08717 1.04854 3.10921 1.14054 3.15021C1.23254 3.1912 1.31534 3.2503 1.384 3.32399L3.47801 5.41699L6.95101 0.991987C6.95726 0.984288 6.96393 0.976943 6.971 0.969986H6.97001Z\" fill=\"black\"/>\n    </svg>,\n    logo: <><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" viewBox=\"0 0 243.8 272.6\">\n        <polygon fill={colors.brand.green} points=\"243.7,274.6 0,274.6 0,30.8 54.5,30.8 53.7,220.6 227.8,220.2 227.8,198.7 75.7,198.3 75.7,144.7 \n        227.8,144.7 227.8,121.9 75.8,122.7 75.6,68.9 227.8,68.9 227.8,46.8 75.9,46.8 96.9,14 0.1,14 0.1,-2 126.1,-2 105.1,30.8 \n        243.8,30.8 243.8,84.9 91.6,84.9 91.7,106.7 243.8,105.9 243.8,160.7 91.7,160.7 91.7,182.4 243.8,182.8 243.8,236.1 37.7,236.6 \n        38.5,46.8 16,46.8 16,258.6 243.7,258.6 \"/>\n        </svg></>\n\n    \n}\n\nconst Icon: React.FC<IconProps> = ({icon}) => {\n    return (\n        <IconDiv>\n            {svgs[icon]}\n        </IconDiv>\n    );\n};\n\nexport default Icon;","import styled from 'styled-components';\nimport { CheckmarkProps } from '../types';\nimport {colors, radius, spacing} from '../../../theme';\n\nexport const CheckmarkDiv = styled.div<CheckmarkProps>`\n    position: absolute;\n    top: 0;\n    right: 0;\n    height: ${spacing[6]};\n    width: ${spacing[6]};\n    background-color: ${colors.brand.mint};\n    display: flex;\n    justify-content: center;\n    align-items: center; \n    svg, path {\n        fill: ${colors.white};\n    }\n    `","import React from 'react';\nimport Icon from '../Icon';\nimport {CheckmarkDiv} from './styles/CheckmarkStyles';\nimport { CheckmarkProps } from './types';\n\nconst Checkmark: React.FC<CheckmarkProps> = () => {\n    return (\n        <CheckmarkDiv>\n            <Icon icon={'check'} />\n        </CheckmarkDiv>\n    );\n};\n\nexport default Checkmark;","import styled from 'styled-components';\nimport { SwatchProps } from '../types';\nimport {breakpoints} from '../../../theme';\n\nexport const SwatchDiv = styled.div<SwatchProps>`\n    position: relative;\n    flex: 1 0 auto;\n    height: 52px;\n    width: 52px;\n    background-color: ${props => props.color};\n    cursor: pointer;\n    &:hover {\n        transition: transform 0.1s ease-out;\n        transform: scale(1.1);\n        z-index: 15;\n    }\n    @media (min-width: ${breakpoints.lg}) {\n        height: 78px;\n        width: 78px;\n    }\n`","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { productSetColorToActive } from '../../store/product/actions';\nimport Checkmark from '../Checkmark';\nimport {SwatchDiv} from './styles/SwatchStyles';\nimport { SwatchProps } from './types';\n\nconst Swatch: React.FC<SwatchProps> = ({color, active, label}) => {\n\n    const dispatch = useDispatch();\n    return (\n        <SwatchDiv active={active} onClick={() => dispatch(productSetColorToActive(color))} color={color}>\n            {active ? <Checkmark /> : null}\n        </SwatchDiv>\n    );\n};\n\nexport default Swatch;","import styled from 'styled-components';\nimport {colors} from '../../../theme';\n\nexport const LetterInitialDiv = styled.div`\n    position: relative;\n    height: 78px;\n    width: 78px;\n    cursor: pointer;\n    flex: 1 0 auto;\n    img {\n        height: 100%;\n        width: 100%;\n    }\n    &:after {\n        display: block;\n        content: '';\n        width: 2px;\n        height: 50%;\n        position: absolute;\n        z-index: 2;\n        top: 0; right: -1px;\n        transform: translateY(50%);\n        background-color: ${colors.brand.blue};\n    }\n    &:last-child:after {\n        display: none;\n    }\n`","import React from 'react';\nimport Checkmark from '../Checkmark';\nimport {LetterInitialDiv} from './styles/LetterInitialStyles';\nimport { LetterInitialProps } from './types';\n\nconst LetterInitial: React.FC<LetterInitialProps> = ({letter, onClick, active}) => {\n    return (\n        <LetterInitialDiv onClick={onClick}>\n            <img src={`stampa/thumbnails/stampa-${letter.toUpperCase()}.jpg`} alt={`Initial: ${letter}`}/>\n            {active ? <Checkmark/> : null}\n        </LetterInitialDiv>\n    );\n};\n\nexport default LetterInitial;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getActiveProductPart, getActiveSection, getMaterialByUid, getProductStampas } from '../../store/product/selectors';\nimport {SwatchData} from '../../store/product/types';\nimport {SwatchTrayDiv} from './styles/SwatchTrayStyles';\nimport { SwatchTrayProps } from './types';\nimport Swatch from '../Swatch';\nimport { productSetStampa } from '../../store/product/actions';\nimport { interfaceGetActiveStage } from '../../store/interface/selectors';\nimport {getProductStampaPos} from '../../store/product/selectors';\nimport LetterInitial from '../LetterInitial';\n\nconst SwatchTray: React.FC<SwatchTrayProps> = () => {\n    const dispatch = useDispatch();\n    const ACTIVE_PRODUCT = useSelector(getActiveProductPart);\n    const ACTIVE_MATERIALS = useSelector(getMaterialByUid(ACTIVE_PRODUCT ? ACTIVE_PRODUCT.current_material.uid : null));\n    const [ACTIVE_SECTION] = useSelector(getActiveSection);\n    const STAMPAS = useSelector(getProductStampas);\n    const STAMPA_POS = useSelector(getProductStampaPos);\n    const SWATCHES = ACTIVE_MATERIALS && ACTIVE_MATERIALS.swatches;\n    const ACTIVE_STAGE = useSelector(interfaceGetActiveStage);\n    const alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v','w', 'x', 'y', 'z'];\n\n    \n    const _renderSwatchTrayContent = () => {\n        if (ACTIVE_STAGE === 'initials')\n            return alphabet.map(letter => <LetterInitial active={STAMPAS[STAMPA_POS] === letter} onClick={() => dispatch(productSetStampa({pos: STAMPA_POS, letter}))} key={letter} letter={letter} />);\n        return SWATCHES && SWATCHES.map((swatch: SwatchData) => <Swatch active={ACTIVE_SECTION.color === swatch.swatch} key={swatch.label} label={swatch.label} color={swatch.swatch} />)\n    }\n\n  if (!ACTIVE_PRODUCT)\n      return null;\n\n    return (\n        <SwatchTrayDiv>\n            {_renderSwatchTrayContent()}\n        </SwatchTrayDiv>\n    );\n};\n\nexport default SwatchTray;","import styled from 'styled-components';\nimport {boxShadow, colors, breakpoints, radius, spacing, textSize} from '../../../theme';\n\n\nconst _genSelectorTheme = (color: string) => {\n    switch (color) {\n        case 'blue' :\n            return colors.brand.blue;\n        case 'mint' :\n            return colors.brand.mint;\n        case 'gray' :\n            return colors.gray[500];\n        case 'green' :\n        default :\n            return colors.brand.green;\n    }\n}\n\nconst space = 3; \n\nexport const SelectorDiv = styled.div`\n    position: relative;\n    display: inline-flex;\n    align-items: stretch;\n    margin-right: 0;\n    margin-bottom: ${spacing[1]};\n\n    @media (min-width: ${breakpoints.md}) {\n        margin-right: ${spacing[6]};\n    }\n    @media (min-width: ${breakpoints.lg}) {\n        margin-right: ${spacing[12]};\n    }\n    `\nexport const SelectorMenu = styled.div`\n    padding: ${spacing[2]};\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: ${props => props.color ? _genSelectorTheme(props.color) : colors.brand.green};\n    svg, path {\n        stroke: ${colors.white};\n    }    \n    @media (min-width: ${breakpoints.lg}) {\n        padding: ${spacing[space]};\n    }\n`\nexport const SelectorTitle = styled.div`\n display: flex;\n align-items: center;\n background: ${props => props.color ? _genSelectorTheme(props.color) : colors.brand.green};\n padding: ${spacing[2]};\n padding-right: ${spacing[4]};\n flex: 1 1 auto;\n color: ${colors.white};\n font-size: ${textSize.sm};\n\n @media (min-width: ${breakpoints.lg}) {\n    padding: ${spacing[space]} ${spacing[space * 4]} ${spacing[space]} ${spacing[space]};\n    font-size: ${textSize.base};\n }\n`\nexport const SelectorArrows = styled.div`\n    display: flex;\n    svg, path {\n        fill: ${colors.white};\n    }\n`\nexport const SelectorArrow = styled.div`\n background: ${props => props.color ? _genSelectorTheme(props.color) : colors.brand.green};\n display: flex;\n align-items: center;\n justify-content: center;\n cursor: pointer;\n width: ${spacing[10]};\n svg {\n    transition: 250ms ease-out;\n }\n &:hover {\n     svg {\n         transform: scale(1.2);\n     }\n }\n &.prev {\n    position: relative;\n    margin-left: ${spacing[space]};\n }\n &.prev::after {\n     content: '';\n     display: block;\n     position: absolute;\n     right: -1px;\n     width: 2px;\n     height: 50%;\n     background: ${colors.white};\n    }\n @media (min-width: ${breakpoints.lg}) {\n    width: ${spacing[12]};\n }\n`\n\nexport const SelectorList = styled.ul`\n position: absolute;\n left: 0; right: 0; top: 0; bottom: auto;\n display: none;\n transform: translateY(calc((100% + ${spacing[3]}) * -1));\n box-shadow: ${boxShadow.xlTop}, ${boxShadow.lg};\n margin-bottom: ${spacing[3]};\n transition: 250ms ease-out;\n &.expanded {\n     display: block;\n }\n `\n export const SelectorListItem = styled.li`\n display: flex;\n justify-content: space-between;\n align-items: center;\n background-color: ${colors.white};\n padding: ${spacing[2]} ${spacing[3]};\n font-size: ${textSize.sm};\n color: ${colors.brand.blue};\n border-bottom: 1px solid ${colors.gray[200]};\n cursor: pointer;\n transition: 250ms ease-out;\n &:hover {\n     padding-left: ${spacing[4]};\n     background: ${colors.gray[50]};\n }\n\n &:last-child {\n     border-bottom: 0;\n }\nsvg {\n    fill: ${colors.brand.blue};\n    stroke: ${colors.brand.blue};   \n}\n\n@media (min-width: ${breakpoints.md}) {\n    font-size: ${textSize.base};\n    padding: ${spacing[3]};\n}\n`","import React, {useState} from 'react';\nimport {useIntl} from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {SelectorDiv, SelectorMenu, SelectorListItem, SelectorTitle, SelectorArrows, SelectorArrow, SelectorList} from './styles/SelectorStyles';\nimport {productSetTextureToActive} from '../../store/product/actions';\nimport { SelectorProps } from './types';\nimport { getActiveSection } from '../../store/product/selectors';\nimport Icon from '../Icon';\nimport { map } from 'lodash';\n\nconst Selector: React.FC<SelectorProps> = ({type, color = 'green'}) => {\n    \n    const dispatch = useDispatch();\n    const intl = useIntl();\n    /**\n     * Data\n     */\n\n    const [activeSection] = useSelector(getActiveSection);\n    const [menuOpen, setMenuOpen] = useState<boolean>(false);\n\n    const {\n        current_material: CURRENT,\n        available_materials: AVAILABLE\n    }\n    = activeSection;\n\n    /**\n     * Methods\n     */\n\n     const _handleCycleSelector = (direction: '<' | '>') => {\n    \n        let idx = AVAILABLE.findIndex((avail: any) => avail.uid === CURRENT.uid);\n        \n           switch(direction)\n           {\n            case '<' :\n                idx = idx === 0 ? AVAILABLE.length - 1 : idx - 1;\n                break;\n            case '>' :\n                idx = idx === AVAILABLE.length - 1 ? 0 : idx + 1;\n                break;\n            default:\n            break;\n           }\n\n        dispatch(productSetTextureToActive(AVAILABLE[idx].uid));\n     }\n\n     const _renderSelectorListItems = () => {\n\n        return AVAILABLE.map((material) => {\n            if (CURRENT.uid === material.uid) {\n                return (\n                    <SelectorListItem key={material.uid}>\n                        {material.label}\n                        <Icon icon={'check'} />\n                    </SelectorListItem>\n                )\n            }\n            return (\n                <SelectorListItem key={material.uid} onClick={() => {\n                    dispatch(productSetTextureToActive(material.uid));\n                    _handleToggleMenu();\n                    }\n                }>\n                    {material.label} <span />\n                </SelectorListItem>\n            )\n        });\n     }\n\n    const _handleToggleMenu = () => {\n        setMenuOpen(prev => !prev);\n    } \n    \n     if (!AVAILABLE.length)\n        return null;\n    \n    return (\n        <SelectorDiv color={color}>\n            <SelectorList className={menuOpen ? 'expanded' : ''}>\n               {_renderSelectorListItems()}\n            </SelectorList>\n            <SelectorMenu color={color} onClick={() => _handleToggleMenu()}>\n                <Icon icon={'menu'} />\n            </SelectorMenu>\n            <SelectorTitle color={color}>\n                {intl.formatMessage({id: 'stage.materials.title'})} / {CURRENT.label}\n            </SelectorTitle>\n            <SelectorArrows>\n                <SelectorArrow color={color} className={'prev'} onClick={() => _handleCycleSelector('<')} >\n                    <Icon icon={'left'} />\n                </SelectorArrow>\n                <SelectorArrow color={color} className={'next'} onClick={() => _handleCycleSelector('>')} >\n                    <Icon icon={'right'} />\n                </SelectorArrow>\n            </SelectorArrows>\n        </SelectorDiv>\n    );\n};\n\nexport default Selector;","import React, {useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {SelectorDiv, SelectorMenu, SelectorListItem, SelectorTitle, SelectorArrows, SelectorArrow, SelectorList} from '../Selector/styles/SelectorStyles';\nimport {productSetActivePart, productSetColorToActive} from '../../store/product/actions';\nimport config from '../../config/brandConfig';\nimport { SectionSelectorProps } from './types';\nimport { getAllSections } from '../../store/product/selectors';\nimport Icon from '../Icon';\n\nconst SectionSelector: React.FC<SectionSelectorProps> = ({color = 'green'}) => {\n    \n    const dispatch = useDispatch();\n    /**\n     * Data\n     */\n    const sections = useSelector(getAllSections);\n    const [activeSection] = sections.filter(s => s.active);\n    const [menuOpen, setMenuOpen] = useState<boolean>(false);\n    // Disable stops the user from clicking on the item until the color has returned to default\n    // This stops the user being able to lock in the hoverColor\n    const [disabled, setDisabled] = useState(false);\n\n    const CURRENT = activeSection;\n    const AVAILABLE = sections.filter(s => !s.locked);\n\n    /**\n     * Methods\n     */\n\n     const _handleCycleSelector = (direction: '<' | '>') => {\n    \n        let idx = AVAILABLE.findIndex((avail: any) => avail.tag === CURRENT.tag);\n        \n           switch(direction)\n           {\n            case '<' :\n                idx = idx === 0 ? AVAILABLE.length - 1 : idx - 1;\n                break;\n            case '>' :\n                idx = idx === AVAILABLE.length - 1 ? 0 : idx + 1;\n                break;\n            default:\n            break;\n           }\n        \n           if (!disabled) {\n                const color = AVAILABLE[idx].color;\n                dispatch(productSetActivePart(AVAILABLE[idx].meshPart));\n                dispatch(productSetColorToActive(config.hoverColor));\n                setTimeout(() => {\n                    dispatch(productSetColorToActive(color));\n                    setDisabled(false);\n                }, 200);\n            }\n     }\n\n     const _handleToggleMenu = () => {\n         setMenuOpen(prev => !prev);\n     } \n\n     const _renderSelectorListItems = () => {\n\n        return AVAILABLE.map((section) => {\n            if (CURRENT.tag === section.tag) {\n                return (\n                    <SelectorListItem key={section.tag}>\n                        {section.label}\n                        <Icon icon={'check'} />\n                    </SelectorListItem>\n                )\n            }\n            return (\n                <SelectorListItem key={section.tag} onClick={() => {\n                    if (!disabled) {\n                        const color = section.color;\n                        _handleToggleMenu();\n                        dispatch(productSetActivePart(section.meshPart));\n                        dispatch(productSetColorToActive(config.hoverColor));\n                        setTimeout(() => {\n                            dispatch(productSetColorToActive(color));\n                            setDisabled(false);\n                        }, 200);\n                        }\n                    }\n                }\n                >\n                    {section.label} <span />\n                </SelectorListItem>\n            )\n        });\n     }\n\n    \n     if (!AVAILABLE.length)\n        return null;\n    \n    return (\n        <SelectorDiv color={color}>\n            <SelectorList className={menuOpen ? 'expanded' : ''}>\n               {_renderSelectorListItems()}\n            </SelectorList>\n            <SelectorMenu color={color} onClick={() => _handleToggleMenu()}>\n                <Icon icon={'menu'} />\n            </SelectorMenu>\n            <SelectorTitle color={color}>\n                {CURRENT.label}\n            </SelectorTitle>\n            <SelectorArrows>\n                <SelectorArrow color={color} className={'prev'} onClick={() => _handleCycleSelector('<')} >\n                    <Icon icon={'left'} />\n                </SelectorArrow>\n                <SelectorArrow color={color} className={'next'} onClick={() => _handleCycleSelector('>')} >\n                    <Icon icon={'right'} />\n                </SelectorArrow>\n            </SelectorArrows>\n        </SelectorDiv>\n    );\n};\n\nexport default SectionSelector;","import styled from 'styled-components';\nimport { ControlPanelProps } from '../types';\n// import {colors, radius, spacing} from '../../../theme';\n\nexport const ControlPanelDiv = styled.div<ControlPanelProps>`\n    position: fixed;\n    bottom: 0; left: 0; right: 0;\n    z-index: 60;\n`","import React from 'react';\nimport {ControlPanelDiv} from './styles/ControlPanelStyles';\nimport { ControlPanelProps } from './types';\n\nconst ControlPanel: React.FC<ControlPanelProps> = ({children}) => {\n    return (\n        <ControlPanelDiv>{children}</ControlPanelDiv>\n    );\n};\n\nexport default ControlPanel;","import styled from 'styled-components';\nimport { ImageEditorProps } from '../types';\nimport {boxShadow, colors, radius, spacing} from '../../../theme';\n\nexport const ImageEditorDiv = styled.div<ImageEditorProps>`\n    box-shadow: 0 0 10px rgba(0,0,0,0.5);\n    background: ${colors.gray[100]};\n    padding: ${spacing[3]};\n    position: relative;\n`\nexport const ImageEditorButtonTrayDiv = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-top: ${spacing[4]};\n`\n\nexport const ImageEditorFontSelector = styled.select`\n    padding: ${spacing[2]};\n`\n\nexport const ImageEditorColorPicker = styled.div`\n    position: absolute;\n    transform: translate(-25%, calc(-100% - 10px));\n    padding: ${spacing[3]};\n    z-index: 9999999;\n    backdrop-filter: blur(5px);\n    box-shadow: ${boxShadow.lg}, ${boxShadow.xlTop};\n    &.hidden {\n        display: none;\n    }\n`\n\nexport const ImageEditorColorHouse = styled.div`\n    position: relative;\n    display: flex;\n    flex: 1 1 auto;\n`\n","import styled from 'styled-components';\nimport {colors, radius, spacing, textSize, boxShadow} from '../../../theme';\n\nexport const UploadArea = styled.div<{draggingOver: boolean}>`\n    background-color: ${colors.gray[100]};\n    border-radius: ${radius.sm};\n    padding: 0 ${spacing[24]};\n    height: 480px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n    color: ${colors.brand.green};\n    text-align: center;\n    overflow: hidden;\n    * {\n        position: relative;\n        z-index: 2;\n    }\n    &:before {\n        content: '';\n        display: block;\n        position: absolute;\n        z-index: 1;\n        border: 2px dashed ${({draggingOver}) => draggingOver ? colors.brand.green : colors.brand.mint};\n        border-radius: ${radius.sm};\n        top: ${spacing[4]};\n        left: ${spacing[4]};\n        bottom: ${spacing[4]};\n        right: ${spacing[4]};\n        transition: border 0.25 ease-out;\n    };\n`\n\nexport  const LabelPill = styled.label`\nbackground-color: ${colors.brand.green};\ndisplay: inline-block;\ncursor: pointer;\ncolor: ${colors.white};\npadding: ${spacing[2]} ${spacing[3]};\nline-height: 1;\nmargin: ${spacing[1]};\nfont-size: ${textSize.sm};\ntransition: transform 0.25 ease-out;\n&:hover {\n    box-shadow: ${boxShadow.sm};\n    transform: translateY(-1px);\n}\n&:active {\n    box-shadow: ${boxShadow.input};\n    transform: translateY(0);\n}\n`\n\nexport const ErrorPanel = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    padding: ${spacing[3]};\n    background-color: ${colors.rose[500]};\n    color: ${colors.white};\n    text-center;\n    font-weight: medium;\n    font-size: ${textSize.sm};\n    animation: slideOut 0.5s ease-out 3s forwards;\n\n    @keyframes slideOut {\n        from {\n            top: 0\n        }\n        to {\n            top: -100px;\n        }\n    }\n`","import React from 'react';\nimport {useIntl} from 'react-intl';\nimport {LabelPill} from './styles/ImageUploadStyles';\n\ninterface UploadFormletInterface {\n    onClick: () => void;\n    handleUpload: (files: FileList) => void;\n    error: string | false;\n}\n\nconst UploadFormlet: React.FC<UploadFormletInterface> = ({handleUpload, onClick}) => {\n\n    const intl = useIntl();\n    \n    const handleClick = (e: React.MouseEvent<HTMLInputElement, MouseEvent>) => {\n        const element = e.target as HTMLInputElement;\n        element.value = '';\n        onClick();\n    }\n\n    return (\n        <>\n            <input\n            onClick={(e) => handleClick(e)}\n            onChange={ (e) => handleUpload((e.target.files as FileList))}\n            type=\"file\" id=\"BtnBrowseHidden\" name=\"files\" style={{display: 'none'}} />\n            <LabelPill htmlFor=\"BtnBrowseHidden\">\n                {intl.formatMessage({id: 'modal.image-upload.upload-button'})}\n            </LabelPill>\n        </>\n    );\n};\n\nexport default UploadFormlet;","import React, {useState} from 'react';\nimport {useIntl} from 'react-intl';\nimport UploadFormlet from './UploadFormlet';\nimport {UploadArea, ErrorPanel} from './styles/ImageUploadStyles';\n\ninterface ImageUploadInterface {\n    handleFileUpload: (files: FileList) => void;\n    error: string | false;\n    clearError: () => void;\n}\n\nconst ImageUpload: React.FC<ImageUploadInterface> = ({error, handleFileUpload, clearError}) => {\n\n    const intl = useIntl();\n\n    const [draggingOver, setDraggingOver] = useState<boolean>(false);\n    \n    const dragOver = (e: React.DragEvent<HTMLDivElement>) => {\n        clearError();\n        e.preventDefault();\n    }\n    \n    const dragEnter = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n        setDraggingOver(true);\n    }\n    \n    const dragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n        setDraggingOver(false);\n    }\n    \n    const fileDrop = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n        const files = e.dataTransfer.files;\n        setDraggingOver(false);\n        handleFileUpload(files);\n    }\n\n    return (\n        <UploadArea\n        onDragOver={dragOver}\n        onDragEnter={dragEnter}\n        onDragLeave={dragLeave}\n        onDrop={fileDrop}\n        draggingOver={draggingOver}\n        >\n            {error ? <ErrorPanel>{error}</ErrorPanel> : ''}\n            <p><UploadFormlet error={error} onClick={clearError} handleUpload={handleFileUpload} /> {intl.formatMessage({id : 'modal.image-upload.upload-text'})}</p>\n        </UploadArea>\n    );\n};\n\nexport default ImageUpload;","import React, {useState} from 'react';\nimport ImageUpload from './ImageUpload';\n\ninterface UploadError {\n    type: 'error';\n    message: string;\n}\n\n const handleAllowedFiles = (file: File): UploadError | File => {\n    if (/\\.(jpe?g|png)$/i.test(file.name) === false )\n        return {type: 'error', 'message': 'Sorry, the file must be a JPEG or PNG.'};\n\n    if (file.size * 1e-6 > 2)\n        return {type: 'error', message: 'Sorry, the file must be below 2MB'};\n\n    return file;\n}\n\n\nconst UploadContainer: React.FC<{uploadImage: (url: string) => void}> = ({uploadImage}) => {\n\n    const [error, setError] = useState<string | false>(false);\n    \n    const convertToBlob = (files: FileList) => {\n        \n        \n        const file = handleAllowedFiles(files[0]);\n        if (!file)\n            return false;\n\n        if (!(file instanceof File) && file.hasOwnProperty('type') && file.type === 'error') {   \n            setError(file.message);\n            return false;\n        }\n            \n        const url = URL.createObjectURL(file);\n        uploadImage(url); \n    }\n\n    return (\n        <ImageUpload\n        error={error}\n        clearError={() => setError(false)}\n        handleFileUpload={convertToBlob}\n        />\n    );\n};\n\nexport default UploadContainer;","import styled from 'styled-components';\nimport {breakpoints, colors, spacing, textSize} from '../../../theme';\n\ninterface ButtonDivProps {\n    big?: boolean;\n    block?: boolean;\n    align? : 'left' | 'center' | 'right';\n    boldupper?: boolean;\n}\n\nconst _genButtonTheme = (color: string) => {\n    switch (color) {\n        case 'blue' :\n            return colors.brand.blue;\n        case 'mint' :\n            return colors.brand.mint;\n        case 'minimal':\n            return colors.gray[500];\n        case 'gray' :\n            return colors.gray[200];\n        case 'green' :\n        default :\n            return colors.brand.green;\n    }\n}\n\nexport const ButtonEl = styled.button<ButtonDivProps>`\n    padding: ${spacing[1]} ${spacing[2]};\n    background: ${props => props.color ? _genButtonTheme(props.color) : colors.brand.green};\n    color: ${props => props.color === 'gray' ? colors.gray[500] : colors.white};\n    display: ${props => props.block ? 'block' : 'inline-block'};\n    width: ${props => props.block ? '100%' : 'auto'};\n    text-align: ${props => props.align};\n    font-weight: ${props => props.boldupper ? 'bold' : 'initial'};\n    text-transform: ${props => props.boldupper ? 'uppercase' : 'initial'};\n    font-size: ${textSize.sm};\n\n    &.minimal {\n        background: transparent;\n        color: ${props => props.color ? _genButtonTheme('minimal') : colors.brand.green};\n        font-size: ${textSize.sm};\n    }\n    &:focus {\n        outline: none;\n    }\n\n    @media(min-width: ${breakpoints.lg}) {\n        font-size: ${textSize.base};\n         padding: ${props => props.big ? `${spacing[3]} ${spacing[2]}` : `${spacing[1]} ${spacing[3]}`};  \n        }\n\n    @media(min-width: ${breakpoints.xl}) {\n    font-size: ${textSize.base};\n     padding: ${props => props.big ? `${spacing[3]} ${spacing[6]}` : `${spacing[1]} ${spacing[3]}`};  \n    }\n`","import React from 'react';\nimport {ButtonEl} from './styles/ButtonStyles';\nimport { ButtonProps } from './types';\n\nconst Button: React.FC<ButtonProps> = ({children, align = 'center', color = 'green', minimal, onClick, big, block, boldupper}) => {\n    return (\n        <ButtonEl boldupper={boldupper} align={align} block={block} big={big} color={color} onClick={e => onClick && onClick(e)} className={minimal ? 'minimal' : ''}>{children}</ButtonEl>\n    );\n};\n\nexport default Button;","import styled from 'styled-components';\nimport { ModalProps } from '../types';\nimport {colors, radius, spacing} from '../../../theme';\n\nexport const ModalDiv = styled.div<ModalProps>`\n    position: fixed;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    top: 0; left: 0; right: 0; bottom: 0;\n    backdrop-filter: blur(5px);\n    z-index: 999999;\n    overflow-y: auto;\n    &.hidden {\n        display: none;\n    }\n\n    > div {\n        transform: scale(0.66);\n        @media (min-width: 414px) {\n            transform: scale(0.75);\n        }\n        @media (min-width: 460px) {\n            transform: scale(0.85);\n        }\n        @media (min-width: 520px) {\n            transform: scale(1);\n        }\n    }\n`\n\nexport const ModalInnerDiv = styled.div`\n\n`","import React from 'react';\nimport {ModalDiv, ModalInnerDiv} from './styles/ModalStyles';\nimport { ModalProps } from './types';\n\nconst Modal: React.FC<ModalProps> = ({children, isOpen}) => {\n    return (\n        <ModalDiv className={isOpen ? '' : 'hidden'}>\n            <ModalInnerDiv>\n                {children}\n            </ModalInnerDiv>\n        </ModalDiv>\n    );\n};\n\nexport default Modal;","import React, { useEffect, useState } from 'react';\nimport uuid from 'react-uuid';\nimport {useIntl} from 'react-intl';\nimport {fabric} from 'fabric';\nimport {ImageEditorDiv, ImageEditorButtonTrayDiv} from './styles/ImageEditorStyles';\nimport { ImageEditorProps } from './types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getProductCustomImage } from '../../store/product/selectors';\nimport { productApplyCustomImage, productSetCustomImage, productClearCustomImage, destroyCustomTextureFromActive } from '../../store/product/actions';\nimport ImageUpload from '../ImageUpload';\nimport Button from '../Button';\nimport Modal from '../../layout/Modal';\nimport { interfaceToggleModal } from '../../store/interface/actions';\nimport { interfaceGetModalState } from '../../store/interface/selectors';\n\nconst ImageEditor: React.FC<ImageEditorProps> = () => {\n    \n    const dispatch = useDispatch();\n    const [editor, setEditor] = useState<any>(null);\n    const uniq = uuid();\n    const dimensions = 480;\n    const canvasPadding = 10; // Relates to image size vs canvas size\n    const customImageUrl = useSelector(getProductCustomImage);\n    const modalState = useSelector(interfaceGetModalState('customImage'));\n    const intl = useIntl();\n\n    /**\n     * Instance setup\n     */\n\n    useEffect(() => {\n            const canvas = new fabric.Canvas(\n                `image-editor-${uniq}`,\n                {backgroundColor: \"#FFFFFF\"}\n            );\n            canvas.setDimensions({width:dimensions, height:dimensions});\n            setEditor(canvas);\n\n            return () => {\n                if (editor) {\n                    editor.dispose();\n                    setEditor(null);\n                    }\n                }\n    }, [customImageUrl]);\n\n    /**\n     * Add image\n     */\n\n    useEffect(() => {\n        if (editor && customImageUrl)\n        {\n            fabric.Image.fromURL(customImageUrl, image => {\n                const customImage = image.set({left: canvasPadding, top: canvasPadding});\n                customImage.scaleToWidth(dimensions - (canvasPadding * 2));\n                editor.add(customImage);\n            })\n        }\n    }, [editor, customImageUrl]);\n\n    /**\n     * Methods\n     */\n\n     const _handleCloseCustomImageModal = () => {\n        dispatch(interfaceToggleModal({id: 'customImage', status: 'closed'}));;\n    }\n\n    const _generateCustomTexture = () => {\n        const texture = editor.toDataURL({multiplier: 1024 / dimensions});\n        _handleCloseCustomImageModal();\n        fetch(texture)\n        .then(res => res.blob())\n        .then(window.URL.createObjectURL)\n        .then(objectUrl => dispatch(productApplyCustomImage(objectUrl)))\n    }\n    \n    const _handleUpload = (url: string) => {\n        dispatch(productSetCustomImage(url));\n    }\n\n    /**\n     * Clear: Clear the image editor, but keep the texture on the active section\n     */\n\n    const _clearCustomTexture = () => {\n        if (editor) editor.dispose();\n        setEditor(null);\n        dispatch(productClearCustomImage());\n    }\n\n    /**\n     * Clear the image editor, and REMOVE the texture on the active section\n     */\n\n    const _destroyCustomTexture = () => {\n        _handleCloseCustomImageModal();\n        dispatch(destroyCustomTextureFromActive());\n    }\n\n\n\n    const _renderContent = () => {\n        if (customImageUrl)\n        return (\n                <ImageEditorDiv>\n                    <canvas id={`image-editor-${uniq}`} />\n                    <ImageEditorButtonTrayDiv>\n                        <div>\n                            <Button color={'green'} onClick={_generateCustomTexture}>\n                                {intl.formatMessage({id : 'modal.image-editor.confirm'})}\n                            </Button>\n                            <Button color={'mint'} onClick={_clearCustomTexture}>\n                                {intl.formatMessage({id : 'modal.image-editor.clear'})}\n                            </Button>\n                        </div>\n                        \n                        <div>\n                            <Button color={'gray'} onClick={_handleCloseCustomImageModal}>\n                                {intl.formatMessage({id : 'modal.image-editor.close'})}\n                            </Button>\n                            <Button color={'gray'} minimal onClick={_destroyCustomTexture}>\n                                {intl.formatMessage({id : 'modal.image-editor.remove'})}\n                            </Button>\n                        </div>\n                    </ImageEditorButtonTrayDiv>\n                </ImageEditorDiv>  \n        );\n    \n        return (\n                <ImageEditorDiv>\n                    <ImageUpload uploadImage={_handleUpload} />\n                        <ImageEditorButtonTrayDiv>\n                            <span />\n                            <div>\n                                <Button color={'gray'} minimal onClick={_destroyCustomTexture}>\n                                    {intl.formatMessage({id : 'modal.image-editor.remove'})}\n                                </Button>\n                                <Button color={'gray'} onClick={_handleCloseCustomImageModal}>\n                                    {intl.formatMessage({id : 'modal.image-editor.close'})}\n                                </Button>\n                            </div>\n                        </ImageEditorButtonTrayDiv>\n                </ImageEditorDiv>\n        );\n    }\n\n    return (\n       <Modal isOpen={modalState === 'open'}>\n           {_renderContent()}\n       </Modal> \n    );    \n};\n\nexport default ImageEditor;","import React, { useEffect, useState } from 'react';\nimport {fabric} from 'fabric';\nimport {useIntl} from 'react-intl';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { HexColorPicker, HexColorInput } from \"react-colorful\";\nimport {ImageEditorDiv, ImageEditorButtonTrayDiv, ImageEditorFontSelector, ImageEditorColorPicker, ImageEditorColorHouse} from '../ImageEditor/styles/ImageEditorStyles';\nimport { TextEditorProps } from './types';\nimport config from '../../config/brandConfig';\nimport { getActiveSection } from '../../store/product/selectors';\nimport { productApplyCustomImage, destroyCustomTextureFromActive } from '../../store/product/actions';\nimport Button from '../Button';\nimport Modal from '../../layout/Modal';\nimport { interfaceToggleModal } from '../../store/interface/actions';\nimport { interfaceGetModalState } from '../../store/interface/selectors';\n\nconst TextEditor: React.FC<TextEditorProps> = () => {\n  \n    const dispatch = useDispatch();\n    const [editor, setEditor] = useState<any>(null);\n    const dimensions = 480;\n    const [activeSection] = useSelector(getActiveSection);\n    const modalState = useSelector(interfaceGetModalState('customText'));\n    const [lastSubmittedText, setLastSubmittedText] = useState<string>();\n    const [textNode, setTextNode] = useState<any>();\n    const [textColor, setTextColor] = useState<string>('#000000');\n    const [colorPickerOpen, setColorPickerOpen] = useState<boolean>(false);\n    const intl = useIntl();\n\n    /**\n     * Instance setup\n     */\n\n    useEffect(() => {\n            const canvas = new fabric.Canvas(\n                `image-editor-text`,\n                {backgroundColor: activeSection.color}\n            );\n            canvas.setDimensions({width:dimensions, height:dimensions});\n                \n            const text = new fabric.IText(\"Text\", {\n                left: 200,\n                top: 200,\n                padding: 7,\n                fill: \"rgb(0,0,0)\",\n                fontFamily: 'Arial'\n              });\n              canvas.add(text);\n              text.enterEditing();\n              setTextNode(text);\n              canvas.setActiveObject(text);\n\n            setEditor(canvas);\n    }, []);\n\n    useEffect(() => {\n        if (editor && activeSection.color !== config.hoverColor)\n        {\n            editor.backgroundColor = activeSection.color;\n            editor.renderAll();\n        }\n    }, [activeSection, editor]);\n\n\n     const _handleCloseCustomImageModal = () => {\n        dispatch(interfaceToggleModal({id: 'customImage', status: 'closed'}));;\n    }\n\n    const _generateCustomTexture = () => {\n        const texture = editor.toDataURL({multiplier: 1024 / dimensions});\n        _handleCloseCustomImageModal();\n        fetch(texture)\n        .then(res => res.blob())\n        .then(window.URL.createObjectURL)\n        .then(objectUrl => {\n            dispatch(productApplyCustomImage(objectUrl))\n            setLastSubmittedText(objectUrl);\n        })\n    }\n\n    useEffect(() => {\n\n        /**\n         * If the editor exists and the activeColor isn't just hovercolor flashing\n         */\n        if (editor && activeSection.color !== config.hoverColor) {\n            if (activeSection.custom_texture && activeSection.custom_texture === lastSubmittedText && activeSection.tag === 'quarters') {\n                _generateCustomTexture();\n            }\n        }\n\n    }, [activeSection.color]);\n\n    /**\n     * Clear the image editor, and REMOVE the texture on the active section\n     */\n\n    const _destroyCustomTexture = () => {\n        _handleCloseCustomImageModal();\n        dispatch(destroyCustomTextureFromActive());\n    }\n\n    const _changeFont = (font: string) => {\n        textNode.set(\"fontFamily\", font);\n        editor.renderAll();\n    }\n\n    useEffect(() => {\n        if (textNode) {\n            textNode.set(\"fill\", textColor);\n            editor.renderAll();\n        }\n    }, [textColor, textNode]);\n\n\n    const _renderContent = () => {\n        \n        return (\n                <ImageEditorDiv>\n                \n                    <canvas id={`image-editor-text`} />\n                    <ImageEditorButtonTrayDiv>\n                        <div style={{flex: '1 1 auto', display: 'flex'}}>\n                            <Button color={'green'} onClick={_generateCustomTexture}>{intl.formatMessage({id: 'modal.text-editor.confirm'})}</Button>\n                            <ImageEditorFontSelector onChange={event => _changeFont(event.target.value)} id=\"\">\n                                <option value=\"Arial\">Arial</option>\n                                <option value=\"Georgia\">Georgia</option>\n                                <option value=\"system-ui\">System</option>\n                            </ImageEditorFontSelector>\n                            <ImageEditorColorHouse>\n                                <ImageEditorColorPicker className={colorPickerOpen ? '' : 'hidden'}>\n                                    <HexColorPicker style={{borderRadius: 0}} color={textColor} onChange={setTextColor} />\n                                    <HexColorInput style={{width: '100%', padding: '5px 10px', backgroundColor: 'rgba(225,225,225, 0.6)', borderRadius: '3px', marginTop: '5px'}} color={textColor} onChange={setTextColor} />\n                                </ImageEditorColorPicker>\n                                <Button color={'mint'} onClick={() => setColorPickerOpen(prev => !prev)}>{colorPickerOpen ? intl.formatMessage({id: 'modal.text-editor.color-add'}) : intl.formatMessage({id: 'modal.text-editor.color-edit'})}</Button>\n                            </ImageEditorColorHouse>\n                        </div>\n                        \n                        <div>\n                            <Button color={'gray'} minimal onClick={_destroyCustomTexture}>{intl.formatMessage({id: 'modal.text-editor.remove'})}</Button>\n                            <Button color={'gray'} onClick={_handleCloseCustomImageModal}>{intl.formatMessage({id: 'modal.text-editor.close'})}</Button>\n                        </div>\n                    </ImageEditorButtonTrayDiv>\n                </ImageEditorDiv>  \n        );\n    }\n\n    return (\n       <Modal isOpen={modalState === 'open'}>\n           {_renderContent()}\n       </Modal> \n    );    \n};\n\nexport default TextEditor;","import styled from 'styled-components';\nimport { SelectorTrayProps } from '../types';\nimport {breakpoints, spacing} from '../../../theme';\n\nexport const SelectorTrayDiv = styled.div<SelectorTrayProps>`\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    padding: ${spacing[3]};\n\n    @media (min-width: ${breakpoints.sm}) {\n        flex-direction: row;\n    }\n\n    @media (min-width: ${breakpoints.md}) {\n        align-items: center;\n        padding: ${spacing[8]};\n    }\n    @media (min-width: ${breakpoints.lg}) {\n        padding: ${spacing[12]};\n    }\n`","import React from 'react';\nimport {SelectorTrayDiv} from './styles/SelectorTrayStyles';\nimport { SelectorTrayProps } from './types';\n\nconst SelectorTray: React.FC<SelectorTrayProps> = ({children}) => {\n    return (\n        <SelectorTrayDiv>{children}</SelectorTrayDiv>\n    );\n};\n\nexport default SelectorTray;","import styled from 'styled-components';\nimport { StageSelectorSidebarProps } from '../types';\nimport {breakpoints, colors, radius, spacing} from '../../../theme';\n\nexport const StageSelectorSidebarDiv = styled.div<StageSelectorSidebarProps>`\n    position: fixed;\n    right: 0;\n    top: 0; bottom: auto;\n    left: auto;\n    height: auto;\n    display: flex;\n    width: 200px;\n    flex-direction: column;\n    align-items: flex-end;\n    margin-top: ${spacing[10]};\n    justify-content: flex-start;\n    z-index: 50;\n    \n    @media (min-width: ${breakpoints.md}) {\n        width: 240px;\n        margin-top: ${spacing[24]};\n    }\n`","import React from 'react';\nimport {StageSelectorSidebarDiv} from './styles/StageSelectorSidebarStyles';\nimport { StageSelectorSidebarProps } from './types';\n\nconst StageSelectorSidebar: React.FC<StageSelectorSidebarProps> = ({children}) => {\n    return (\n        <StageSelectorSidebarDiv>{children}</StageSelectorSidebarDiv>\n    );\n};\n\nexport default StageSelectorSidebar;","import styled from 'styled-components';\nimport { StageSelectorProps } from '../types';\nimport {breakpoints, colors, radius, spacing} from '../../../theme';\n\nexport const StageSelectorDiv = styled.div<StageSelectorProps>`\n    width: ${props => props.active ? '100%' : `calc(100% - ${spacing[10]})`};\n    position: relative;\n    transition: 150ms ease-out;\n    margin-bottom: ${spacing[1]};\n    opacity: ${props => props.active ? '1' : '0.66'};\n    @media (min-width: ${breakpoints.md}) {\n        margin-bottom: ${spacing[3]};\n    }\n`\n\nexport const StageSelectorAccent = styled.div<{active: boolean}>`\n    background-color: ${colors.white};\n    height: 3px;\n    width: ${props => props.active ? '30px' : '0px'};\n    position: absolute;\n    right: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    z-index: 5;\n    transition: 150ms 150ms ease-out;\n`","import React from 'react';\nimport Button from '../Button';\nimport {StageSelectorDiv, StageSelectorAccent} from './styles/StageSelectorStyles';\nimport { StageSelectorProps } from './types';\n\nconst StageSelector: React.FC<StageSelectorProps> = ({children, onClick, active}) => {\n    return (\n        <StageSelectorDiv active={active} onClick={onClick}>\n            <Button align={'left'} block big boldupper>\n                {children}\n            </Button>\n            <StageSelectorAccent active={active}/>\n        </StageSelectorDiv>\n    );\n};\n\nexport default StageSelector;","import styled from 'styled-components';\nimport { LoadingOverlayProps } from '../types';\nimport {colors, radius, spacing} from '../../../theme';\n\nexport const LoadingOverlayDiv = styled.div`\n    position: fixed;\n    top: 0; left: 0; right: 0; bottom: 0;\n    z-index: 10999999999;\n    background: ${colors.brand.offwhite};\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    p {\n        margin-top: ${spacing[10]};\n        font-weight: bold;\n        text-color: ${colors.brand.blue};\n    }\n\n`","import React from 'react';\nimport Icon from '../Icon';\nimport {LoadingOverlayDiv} from './styles/LoadingOverlayStyles';\nimport { LoadingOverlayProps } from './types';\n\nconst LoadingOverlay: React.FC<LoadingOverlayProps> = ({message}) => {\n    return (\n        <LoadingOverlayDiv>\n            <Icon icon={'logo'} />\n            <p>{message}</p>\n        </LoadingOverlayDiv>\n    );\n};\n\nexport default LoadingOverlay;","import styled from 'styled-components';\nimport { StampaColorPickerProps } from '../types';\nimport {colors, radius, spacing} from '../../../theme';\n\nexport const StampaColorPickerDiv = styled.div<StampaColorPickerProps>`\n    position: relative;\n    display: flex;\n    align-items: center;\n`\n\nexport const StampaColorPickerPalette = styled.div<{active?: boolean}>`\n    display: ${props => props.active ? 'block' : 'none'};\n    position: absolute;\n    top: 0;\n    transform: translate(-10%, calc(-100% - ${spacing[3]}));\n`","import React, {useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {useIntl} from 'react-intl';\nimport { HexColorPicker, HexColorInput } from \"react-colorful\";\nimport {getProductStampaColor} from '../../store/product/selectors';\nimport {StampaColorPickerDiv, StampaColorPickerPalette} from './styles/StampaColorPickerStyles';\nimport { productSetStampaColor } from '../../store/product/actions';\nimport { StampaColorPickerProps } from './types';\nimport Button from '../Button';\n\nconst StampaColorPicker: React.FC<StampaColorPickerProps> = () => {\n    const dispatch = useDispatch();\n    const stampaColor = useSelector(getProductStampaColor);\n    const intl = useIntl();\n    const [isOpen, setIsOpen] = useState<boolean>(false);\n\n    return (\n        <StampaColorPickerDiv>\n            <StampaColorPickerPalette active={isOpen}>\n                <HexColorPicker style={{borderRadius: 0}} color={stampaColor} onChange={color => dispatch(productSetStampaColor(color))} />\n                <HexColorInput style={{width: '100%', padding: '5px 10px', backgroundColor: 'rgba(225,225,225, 0.6)', borderRadius: '3px', marginTop: '5px'}} color={stampaColor} onChange={color => dispatch(productSetStampaColor(color))} />\n            </StampaColorPickerPalette>\n            <Button onClick={() => setIsOpen(prev => !prev)} color={'blue'} big boldupper>{intl.formatMessage({id: isOpen ? 'stage.initials.button.color-add' : 'stage.initials.button.color-edit'})}</Button>\n        </StampaColorPickerDiv>\n    );\n};\n\nexport default StampaColorPicker;","import styled from 'styled-components';\nimport { ScaffoldInitialsButtonsProps } from '../types';\nimport {colors, breakpoints, radius, spacing} from '../../../theme';\n\nexport const ScaffoldInitialsButtonsDiv = styled.div<ScaffoldInitialsButtonsProps>`\n    display: flex;\n    flex-direction: column;\n    \n    @media (min-width: ${breakpoints.lg}) {\n        flex-direction: row;\n    }\n\n    article {\n        display: flex;\n        align-items: center;\n        justify-content: stretch;\n        margin-top: ${spacing[2]};\n        @media (min-width: ${breakpoints.md}) {\n            margin: 0 ${spacing[3]};\n        }\n        button {\n            display: block;\n            flex: 1 1 auto;\n        }\n        > div {\n            flex: 2 0 auto;\n           > div {\n                transform: translate(0, calc(-100% - ${spacing[2]}));\n                input {\n                    background-color: ${colors.white} !important;\n                }\n            }\n        }\n        \n    }\n`","import React from 'react';\nimport {ScaffoldInitialsButtonsDiv} from './styles/ScaffoldInitialsButtonsStyles';\nimport { ScaffoldInitialsButtonsProps } from './types';\n\nconst ScaffoldInitialsButtons: React.FC<ScaffoldInitialsButtonsProps> = ({children}) => {\n    return (\n        <ScaffoldInitialsButtonsDiv>{children}</ScaffoldInitialsButtonsDiv>\n    );\n};\n\nexport default ScaffoldInitialsButtons;","import React, {Suspense, useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport World from '../World';\nimport {thunkProductLoadMaterials, thunkProductLoadModel} from '../../store/product/thunks';\nimport {getActiveSection, getProductModelPath, getProductStampaPos, getProductStampaStyle} from '../../store/product/selectors';\nimport {useIntl} from 'react-intl';\nimport SwatchTray from '../SwatchTray';\nimport Selector from '../Selector';\nimport SectionSelector from '../SectionSelector';\nimport ControlPanel from '../../layout/ControlPanel';\nimport ImageEditor from '../ImageEditor';\nimport TextEditor from '../TextEditor';\nimport SelectorTray from '../../layout/SelectorTray';\nimport StageSelectorSidebar from '../../layout/StageSelectorSidebar';\nimport StageSelector from '../StageSelector';\nimport Button from '../Button';\nimport { interfaceSetActiveStage, interfaceToggleModal } from '../../store/interface/actions';\nimport { interfaceGetActiveStage } from '../../store/interface/selectors';\nimport LoadingOverlay from '../LoadingOverlay';\nimport {productSetStampaPos, productSetStampaStyle } from '../../store/product/actions';\nimport StampaColorPicker from '../StampaColorPicker';\nimport ScaffoldInitialsButtons from '../../layout/ScaffoldInitialsButtons';\n\n/**\n * \n * @todo\n * -    Make responsive\n * -    Port to WordPress\n * -    Test real data\n * -    Dual custom image\n * -    Output to ecommerce store\n * -    Save custom image / custom text\n */\n\nconst App: React.FC = () => {\n\n    const dispatch = useDispatch();\n    const MODEL_PATH = useSelector(getProductModelPath);\n    const [activeSection] = useSelector(getActiveSection);\n    const currentActiveStage = useSelector(interfaceGetActiveStage);\n    const stampaPos = useSelector(getProductStampaPos);\n    const stampaStyle = useSelector(getProductStampaStyle);\n    const intl = useIntl();\n    \n    useEffect(() => {\n        dispatch(thunkProductLoadMaterials());\n        dispatch(thunkProductLoadModel());\n    }, [dispatch]);\n\n    useEffect(() => {\n        if (activeSection) {\n            if ((activeSection.tag !== 'quarters' && currentActiveStage === 'customText' )|| (activeSection.tag !== 'quarters' && currentActiveStage === 'customImage'))\n                dispatch(interfaceSetActiveStage('materials'))\n        }\n    }, [activeSection, currentActiveStage, dispatch])\n\n    const _handleOpenCustomModal = () => {\n        dispatch(interfaceToggleModal({id: 'customImage', status: 'open'}));\n    }\n\n    const _handleOpenCustomText = () => {\n        dispatch(interfaceToggleModal({id: 'customText', status: 'open'}));\n    }\n\n\n    if (!MODEL_PATH)\n        return <LoadingOverlay message={intl.formatMessage({id : 'loading.message.fetching-data'})} />\n        \n    return (\n        <Suspense fallback={<LoadingOverlay message={intl.formatMessage({id : 'loading.message.loading-model'})} />}>\n                <ImageEditor />\n                <TextEditor />\n            <ControlPanel>\n                <SelectorTray>\n                {currentActiveStage === 'materials'  &&\n                    <SectionSelector color={'blue'} />\n                }\n                <Selector type={`material`} />\n\n                    {activeSection.tag === 'quarters' && \n                    <>\n                    {currentActiveStage === 'customImage' && \n                        <Button boldupper color={'blue'} big onClick={_handleOpenCustomModal}>\n                            {intl.formatMessage({id : 'stage.customImage.button.add-edit'})}\n                        </Button>\n                    }\n                    {currentActiveStage === 'customText' && \n                        <Button boldupper color={'blue'} big onClick={_handleOpenCustomText}>\n                            {intl.formatMessage({id : 'stage.customText.button.add-edit'})}\n                        </Button>\n                    }\n                    </>\n                    }\n                    {currentActiveStage === 'initials' && \n                        <ScaffoldInitialsButtons>\n                            <article>\n                                <Button boldupper color={stampaPos === '1' ? 'green' : 'mint'} big onClick={() => dispatch(productSetStampaPos('1'))}>\n                                    {intl.formatMessage({id : 'stage.initials.button.left'})}\n                                </Button>\n                                <Button boldupper color={stampaPos === '1' ? 'mint' : 'green'} big onClick={() => dispatch(productSetStampaPos('2'))}>\n                                    {intl.formatMessage({id : 'stage.initials.button.right'})}\n                                </Button>\n                            </article>\n                            \n                            <article>\n                                <StampaColorPicker />\n                                <Button boldupper color={stampaStyle === 'printed' ? 'green' : 'mint'} big onClick={() => dispatch(productSetStampaStyle('printed'))}>\n                                    {intl.formatMessage({id : 'stage.initials.button.style-print'})}\n                                </Button>\n                                <Button boldupper color={stampaStyle === 'printed' ? 'mint' : 'green'} big onClick={() => dispatch(productSetStampaStyle('stitched'))}>\n                                    {intl.formatMessage({id : 'stage.initials.button.style-stitch'})}\n                                </Button>\n                            </article>\n                        </ScaffoldInitialsButtons>\n                    }\n                </SelectorTray>\n                <SwatchTray />\n            </ControlPanel>\n                <World model={MODEL_PATH} />\n                <StageSelectorSidebar>\n                    <StageSelector active={currentActiveStage === 'materials'} onClick={() => dispatch(interfaceSetActiveStage('materials'))} >{intl.formatMessage({id : 'stage.materials.title'})}</StageSelector>\n                    <StageSelector active={currentActiveStage === 'initials'} onClick={() => dispatch(interfaceSetActiveStage('initials'))} >{intl.formatMessage({id : 'stage.initials.title'})}</StageSelector>\n                    {activeSection.tag === 'quarters' && \n                    <>\n                        <StageSelector active={currentActiveStage === 'customText'} onClick={() => dispatch(interfaceSetActiveStage('customText'))} >{intl.formatMessage({id : 'stage.customText.title'})}</StageSelector>\n                        <StageSelector active={currentActiveStage === 'customImage'} onClick={() => dispatch(interfaceSetActiveStage('customImage'))} >{intl.formatMessage({id : 'stage.customImage.title'})}</StageSelector>\n                    </>\n                    }\n                </StageSelectorSidebar>\n        </Suspense>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport {IntlProvider} from 'react-intl';\nimport _get from 'lodash/get';\nimport {store} from './store';\nimport App from './components/App';\nimport {Preflight} from './theme';\nimport messages from './i18n/en.json';\nimport italianMessages from './i18n/it.json';\n\nconst languages: {[key: string]: any} = {\n  en: messages,\n  it: italianMessages\n}\n\nconst browserLocale = _get(global, 'navigator.userLanguage') || _get(global, 'navigator.language');\nconst locale = browserLocale || 'en';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Preflight />\n      <Provider store={store}>\n        <IntlProvider locale={locale} messages={languages[locale]}>\n          <App />\n        </IntlProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","\n\n // action\n\nexport const PRODUCT_ADD_MESHPARTS = 'PRODUCT_ADD_MESHPARTS';\nexport const PRODUCT_SET_ACTIVE = 'PRODUCT_SET_ACTIVE';\nexport const PRODUCT_SET_TEXTURE = 'PRODUCT_SET_TEXTURE';\nexport const PRODUCT_SET_COLOR = 'PRODUCT_SET_COLOR';\nexport const PRODUCT_ADD_MATERIALS = 'PRODUCT_ADD_MATERIALS';\nexport const PRODUCT_ADD_MODEL_DATA = 'PRODUCT_ADD_MODEL_DATA';\nexport const PRODUCT_SET_CUSTOM_IMAGE = 'PRODUCT_SET_CUSTOM_IMAGE';\nexport const PRODUCT_APPLY_CUSTOM_IMAGE = 'PRODUCT_APPLY_CUSTOM_IMAGE';\nexport const PRODUCT_CLEAR_CUSTOM_IMAGE = 'PRODUCT_CLEAR_CUSTOM_IMAGE';\nexport const PRODUCT_DESTROY_ACTIVE_CUSTOM_IMAGE = 'PRODUCT_DESTROY_ACTIVE_CUSTOM_IMAGE';\nexport const PRODUCT_SET_TEXTURE_TO_TAG = 'PRODUCT_SET_TEXTURE_TO_TAG';\nexport const PRODUCT_SET_STAMPA = 'PRODUCT_SET_STAMPA';\nexport const PRODUCT_SET_STAMPA_COLOR = 'PRODUCT_SET_STAMPA_COLOR';\nexport const PRODUCT_SET_STAMPA_POS = 'PRODUCT_SET_STAMPA_POS';\nexport const PRODUCT_SET_STAMPA_STYLE = 'PRODUCT_SET_STAMPA_STYLE';\n\ninterface productAction {\n    type: typeof PRODUCT_ADD_MESHPARTS\n    | typeof PRODUCT_SET_ACTIVE\n    | typeof PRODUCT_SET_TEXTURE\n    | typeof PRODUCT_SET_COLOR\n    | typeof PRODUCT_ADD_MATERIALS\n    | typeof PRODUCT_SET_CUSTOM_IMAGE\n    | typeof PRODUCT_APPLY_CUSTOM_IMAGE\n    | typeof PRODUCT_CLEAR_CUSTOM_IMAGE\n    | typeof PRODUCT_DESTROY_ACTIVE_CUSTOM_IMAGE\n    | typeof PRODUCT_SET_TEXTURE_TO_TAG\n    | typeof PRODUCT_SET_STAMPA\n    | typeof PRODUCT_SET_STAMPA_COLOR\n    | typeof PRODUCT_SET_STAMPA_POS\n    | typeof PRODUCT_SET_STAMPA_STYLE\n    | typeof PRODUCT_ADD_MODEL_DATA,\n    payload: any\n}\n\nexport interface productPartType {\n    id: string;\n    name: string;\n    tag: string;\n    parent: string;\n    material: string;\n    locked: boolean;\n    materialUid: number;\n    color: string;\n    children: string[]\n}\n\ntype Map = 'color' | 'ao' | 'roughness' | 'normal' | 'alpha' | 'customTexture';\n\nexport interface SwatchData {\n    label: string;\n    swatch: string;\n}\n\nexport interface Texture {\n    uid: number;\n    tag: string;\n    label: string;\n    src: string;\n    maps: Map[];\n    normalIntensity?: number,\n    flipY?: boolean;\n    swatches: SwatchData[];\n    repeat?: number;\n    metallic?: boolean;\n}\n\nexport type MaterialReference = {uid: number, tag: string, label: string};\n\nexport interface Section {\n    tag: string;\n    label: string;\n    available_materials: MaterialReference[];\n    initial_material: MaterialReference;\n    current_material: MaterialReference;\n    active: boolean;\n    meshPart: string;\n    color: string;\n    custom_texture?: any;\n    locked: boolean;\n}\n\nexport type productActionTypes = productAction;\n\nexport type productState = {\n    [key: string]: any;\n    loadingMeshParts: boolean;\n    loadingMaterials: boolean;\n    loadingModelData: boolean;\n    meshParts: productPartType[];\n    materials: Texture[];\n    sections: Section[];\n    src: string;\n    customImage: string;\n    stampa: {[key: string] : string};\n    stampaColor: string;\n    stampaPos: '1' | '2';\n    stampaStyle: 'printed' | 'stitched';\n};","export interface interfaceState {\n  pointer: {x: number; y: number};\n  currentStage: 'materials' | 'initials' | 'customText' | 'customImage';\n  modalIsOpen: {[key: string]: 'open' | 'closed'};\n};\n\n// action\n\nexport const INTERFACE_UPDATE_POINTER = 'INTERFACE_UPDATE_POINTER';\nexport const INTERFACE_TOGGLE_MODAL = 'INTERFACE_TOGGLE_MODAL';\nexport const INTERFACE_SET_ACTIVE_STAGE = 'INTERFACE_SET_ACTIVE_STAGE';\n\ninterface interfaceAction {\n    type: typeof INTERFACE_UPDATE_POINTER\n    | typeof INTERFACE_SET_ACTIVE_STAGE\n    | typeof INTERFACE_TOGGLE_MODAL,\n    payload: any\n}\n\nexport type interfaceActionTypes = interfaceAction;\n","import { createGlobalStyle } from 'styled-components';\n\n/**\n * This is base reset created by Tailwind called Preflight.\n * https://tailwindcss.com/docs/preflight\n*/\n\nconst Preflight = createGlobalStyle`\n/*! modern-normalize v1.0.0 | MIT License | https://github.com/sindresorhus/modern-normalize */\n\n/*\nDocument\n========\n*/\n\n/**\nUse a better box model (opinionated).\n*/\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n/**\nUse a more readable tab size (opinionated).\n*/\n\n:root {\n  -moz-tab-size: 4;\n  tab-size: 4;\n}\n\n/**\n1. Correct the line height in all browsers.\n2. Prevent adjustments of font size after orientation changes in iOS.\n*/\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/*\nSections\n========\n*/\n\n/**\nRemove the margin in all browsers.\n*/\n\nhtml, body, #root {\n  height: 100%;\n}\n\nbody {\n  margin: 0;\n}\n\n/**\nImprove consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n*/\n\nbody {\n  font-family:\n    'Montserrat',\n\t\tsystem-ui,\n\t\t-apple-system, /* Firefox supports this but not yet 'system-ui' */\n\t\t'Segoe UI',\n\t\tRoboto,\n\t\tHelvetica,\n\t\tArial,\n\t\tsans-serif,\n\t\t'Apple Color Emoji',\n\t\t'Segoe UI Emoji';\n}\n\n/*\nGrouping content\n================\n*/\n\n/**\n1. Add the correct height in Firefox.\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\n*/\n\nhr {\n  height: 0; /* 1 */\n  color: inherit; /* 2 */\n}\n\n/*\nText-level semantics\n====================\n*/\n\n/**\nAdd the correct text decoration in Chrome, Edge, and Safari.\n*/\n\nabbr[title] {\n  -webkit-text-decoration: underline dotted;\n          text-decoration: underline dotted;\n}\n\n/**\nAdd the correct font weight in Edge and Safari.\n*/\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n2. Correct the odd 'em' font sizing in all browsers.\n*/\n\ncode,\nkbd,\nsamp,\npre {\n  font-family:\n\t\tui-monospace,\n\t\tSFMono-Regular,\n\t\tConsolas,\n\t\t'Liberation Mono',\n\t\tMenlo,\n\t\tmonospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\nAdd the correct font size in all browsers.\n*/\n\nsmall {\n  font-size: 80%;\n}\n\n/**\nPrevent 'sub' and 'sup' elements from affecting the line height in all browsers.\n*/\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/*\nTabular data\n============\n*/\n\n/**\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\n*/\n\ntable {\n  text-indent: 0; /* 1 */\n  border-color: inherit; /* 2 */\n}\n\n/*\nForms\n=====\n*/\n\n/**\n1. Change the font styles in all browsers.\n2. Remove the margin in Firefox and Safari.\n*/\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: 'Montserrat'; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\nRemove the inheritance of text transform in Edge and Firefox.\n1. Remove the inheritance of text transform in Firefox.\n*/\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\nCorrect the inability to style clickable types in iOS and Safari.\n*/\n\nbutton,\n[type='button'],\n[type='reset'],\n[type='submit'] {\n  -webkit-appearance: button;\n}\n\n/**\nRemove the inner border and padding in Firefox.\n*/\n\n::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\nRestore the focus styles unset by the previous rule.\n*/\n\n:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\nRemove the additional ':invalid' styles in Firefox.\nSee: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737\n*/\n\n:-moz-ui-invalid {\n  box-shadow: none;\n}\n\n/**\nRemove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.\n*/\n\nlegend {\n  padding: 0;\n}\n\n/**\nAdd the correct vertical alignment in Chrome and Firefox.\n*/\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\nCorrect the cursor style of increment and decrement buttons in Safari.\n*/\n\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n1. Correct the odd appearance in Chrome and Safari.\n2. Correct the outline style in Safari.\n*/\n\n[type='search'] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\nRemove the inner padding in Chrome and Safari on macOS.\n*/\n\n::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Change font properties to 'inherit' in Safari.\n*/\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/*\nInteractive\n===========\n*/\n\n/*\nAdd the correct display in Chrome and Safari.\n*/\n\nsummary {\n  display: list-item;\n}\n\n/**\n * Manually forked from SUIT CSS Base: https://github.com/suitcss/base\n * A thin layer on top of normalize.css that provides a starting point more\n * suitable for web applications.\n */\n\n/**\n * Removes the default spacing and border for appropriate elements.\n */\n\nblockquote,\ndl,\ndd,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nhr,\nfigure,\np,\npre {\n  margin: 0;\n}\n\nbutton {\n  background-color: transparent;\n  background-image: none;\n}\n\n/**\n * Work around a Firefox/IE bug where the transparent 'button' background\n * results in a loss of the default 'button' focus styles.\n */\n\nbutton:focus {\n  outline: 1px dotted;\n  outline: 5px auto -webkit-focus-ring-color;\n}\n\nfieldset {\n  margin: 0;\n  padding: 0;\n}\n\nol,\nul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n/**\n * Tailwind custom reset styles\n */\n\n/**\n * 1. Use the user's configured 'sans' font-family (with Tailwind's default\n *    sans-serif font stack as a fallback) as a sane default.\n * 2. Use Tailwind's default \"normal\" line-height so the user isn't forced\n *    to override it to ensure consistency even when using the default theme.\n */\n\nhtml {\n  font-family: 'Montserrat', ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; /* 1 */\n  line-height: 1.5; /* 2 */\n}\n\n/**\n * Inherit font-family and line-height from 'html' so users can set them as\n * a class directly on the 'html' element.\n */\n\nbody {\n  font-family: inherit;\n  line-height: inherit;\n}\n\n/**\n * 1. Prevent padding and border from affecting element width.\n *\n *    We used to set this in the html element and inherit from\n *    the parent element for everything else. This caused issues\n *    in shadow-dom-enhanced elements like <details> where the content\n *    is wrapped by a div with box-sizing set to 'content-box'.\n *\n *    https://github.com/mozdevs/cssremedy/issues/4\n *\n *\n * 2. Allow adding a border to an element by just adding a border-width.\n *\n *    By default, the way the browser specifies that an element should have no\n *    border is by setting it's border-style to 'none' in the user-agent\n *    stylesheet.\n *\n *    In order to easily add borders to elements by just setting the 'border-width'\n *    property, we change the default border-style for all elements to 'solid', and\n *    use border-width to hide them instead. This way our 'border' utilities only\n *    need to set the 'border-width' property instead of the entire 'border'\n *    shorthand, making our border utilities much more straightforward to compose.\n *\n *    https://github.com/tailwindcss/tailwindcss/pull/116\n */\n\n*,\n::before,\n::after {\n  box-sizing: border-box; /* 1 */\n  border-width: 0; /* 2 */\n  border-style: solid; /* 2 */\n  border-color: #e5e7eb; /* 2 */\n}\n\n/*\n * Ensure horizontal rules are visible by default\n */\n\nhr {\n  border-top-width: 1px;\n}\n\n/**\n * Undo the 'border-style: none' reset that Normalize applies to images so that\n * our 'border-{width}' utilities have the expected effect.\n *\n * The Normalize reset is unnecessary for us since we default the border-width\n * to 0 on all elements.\n *\n * https://github.com/tailwindcss/tailwindcss/issues/362\n */\n\nimg {\n  border-style: solid;\n}\n\ntextarea {\n  resize: vertical;\n}\n\ninput::placeholder,\ntextarea::placeholder {\n  color: #9ca3af;\n}\n\nbutton,\n[role=\"button\"] {\n  cursor: pointer;\n}\n\ntable {\n  border-collapse: collapse;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\n/**\n * Reset links to optimize for opt-in styling instead of\n * opt-out.\n */\n\na {\n  color: inherit;\n  text-decoration: inherit;\n}\n\n/**\n * Reset form element properties that are easy to forget to\n * style explicitly so you don't inadvertently introduce\n * styles that deviate from your design system. These styles\n * supplement a partial reset that is already applied by\n * normalize.css.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  padding: 0;\n  line-height: inherit;\n  color: inherit;\n}\n\n/**\n * Use the configured 'mono' font family for elements that\n * are expected to be rendered with a monospace font, falling\n * back to the system monospace stack if there is no configured\n * 'mono' font family.\n */\n\npre,\ncode,\nkbd,\nsamp {\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\n}\n\n/**\n * Make replaced elements 'display: block' by default as that's\n * the behavior you want almost all of the time. Inspired by\n * CSS Remedy, with 'svg' added as well.\n *\n * https://github.com/mozdevs/cssremedy/issues/14\n */\n\nimg,\nsvg,\nvideo,\ncanvas,\naudio,\niframe,\nembed,\nobject {\n  display: block;\n  vertical-align: middle;\n}\n\n/**\n * Constrain images and videos to the parent width and preserve\n * their instrinsic aspect ratio.\n *\n * https://github.com/mozdevs/cssremedy/issues/14\n */\n\nimg,\nvideo {\n  max-width: 100%;\n  height: auto;\n}`\n\nexport default Preflight;","\n\nconst spacing: {[key: number] : string} = {\n    1: '0.25rem',\n    2: '0.5rem',\n    3: '0.75rem',\n    4: '1rem',\n    5: '1.25rem',\n    6: '1.5rem',\n    7: '1.75rem',\n    8: '2rem',\n    9: '2.25rem',\n    10: '2.5rem',\n    12: '3rem',\n    14: '3.5rem',\n    16: '4rem',\n    20: '5rem',\n    24: '6rem'\n}\n\nexport default spacing;","const radius = {\n    none: '0px',\n    sm: '3px',\n    md: '4px',\n    full: '9999px'\n}\n\nexport default radius;","const breakpoints =  {\n    sm: '640px',\n    md: '768px',\n    lg: '1024px',\n    xl: '1280px',\n    xxl: '1440px'\n}\n\nexport default breakpoints;","const textSize = {\n    xs: '0.75rem',\n    sm: '0.875rem',\n    base: '1rem',\n    lg: '1.125rem',\n    xl: '1.25rem',\n    xxl: '1.5rem' \n}\n\nexport default textSize;","const colors = {\n    white: '#FFFFFF',\n    blueGray: {\n        50: '#F8FAFC',\n        100: '#F1F5F9',\n        200: '#E2E8F0',\n        300: '#CBD5E1',\n        400: '#94A3B8',\n        500: '#64748B',\n        600: '#475569',\n        700: '#334155',\n        800: '#1E293B',\n        900: '#0F172A'\n    },\n    coolGray: {\n        50: '#F9FAFB',\n        100: '#F3F4F6',\n        200: '#E5E7EB',\n        300: '#D1D5DB',\n        400: '#9CA3AF',\n        500: '#6B7280',\n        600: '#4B5563',\n        700: '#374151',\n        800: '#1F2937',\n        900: '#111827'\n    },\n    gray: {\n        50: '#FAFAFA',\n        100: '#F4F4F5',\n        200: '#E4E4E7',\n        300: '#D4D4D8',\n        400: '#A1A1AA',\n        500: '#71717A',\n        600: '#52525B',\n        700: '#3F3F46',\n        800: '#27272A',\n        900: '#18181B'\n    },\n    trueGray: {\n        50: '#FAFAFA',\n        100: '#F5F5F5',\n        200: '#E5E5E5',\n        300: '#D4D4D4',\n        400: '#A3A3A3',\n        500: '#737373',\n        600: '#525252',\n        700: '#404040',\n        800: '#262626',\n        900: '#171717'\n    },\n    warmGray: {\n        50: '#FAFAF9',\n        100: '#F5F5F4',\n        200: '#E7E5E4',\n        300: '#D6D3D1',\n        400: '#A8A29E',\n        500: '#78716C',\n        600: '#57534E',\n        700: '#44403C',\n        800: '#292524',\n        900: '#1C1917'\n    },\n    red: {\n        50 :'#FEF2F2',\n        100 :'#FEE2E2',\n        200 :'#FECACA',\n        300 :'#FCA5A5',\n        400 :'#F87171',\n        500 :'#EF4444',\n        600 :'#DC2626',\n        700 :'#B91C1C',\n        800 :'#991B1B',\n        900 :'#7F1D1D'\n    },\n    indigo: {\n        50 :'#EEF2FF',\n        100 :'#E0E7FF',\n        200 :'#C7D2FE',\n        300 :'#A5B4FC',\n        400 :'#818CF8',\n        500 :'#6366F1',\n        600 :'#4F46E5',\n        700 :'#4338CA',\n        800 :'#3730A3',\n        900 :'#312E81'\n    },\n    green: {\n        50 :'#ECFDF5',\n        100 :'#D1FAE5',\n        200 :'#A7F3D0',\n        300 :'#6EE7B7',\n        400 :'#34D399',\n        500 :'#10B981',\n        600 :'#059669',\n        700 :'#047857',\n        800 :'#065F46',\n        900 :'#064E3B'\n    },\n    orange: {\n        50 :'#FFFBEB',\n        100 :'#FEF3C7',\n        200 :'#FDE68A',\n        300 :'#FCD34D',\n        400 :'#FBBF24',\n        500 :'#F59E0B',\n        600 :'#D97706',\n        700 :'#B45309',\n        800 :'#92400E',\n        900 :'#78350F'\n    },\n    rose: {\n        50 :'#FFF1F2',\n        100 :'#FFE4E6',\n        200 :'#FECDD3',\n        300 :'#FDA4AF',\n        400 :'#FB7185',\n        500 :'#F43F5E',\n        600 :'#E11D48',\n        700 :'#BE123C',\n        800 :'#9F1239',\n        900 :'#881337'\n    },\n    brand: {\n        green : '#1c894a',\n        blue : '#01587d',\n        mint : '#57cc99',\n        offwhite: '#f1f3f4'\n    }\n}\n\nexport default colors;","const boxShadow = {\n    sm: '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)',\n    md: '0 4px 12px -1px rgba(0, 0, 0, 0.2), 0 2px 4px -1px rgba(0, 0, 0, 0.4)',\n    lg: '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',\n    xl: '0 25px 50px -12px rgba(0, 0, 0, 0.25)',\n    xlTop: '0 -25px 50px -12px rgba(0, 0, 0, 0.05)',\n    inner: 'inset 5px 5px 5px 0 rgba(0, 0, 0, 0.2)',\n    input: 'inset 0 2px 4px 0 rgba(0, 0, 0, 0.06)' \n}\n\nexport default boxShadow;","import {Texture} from '../store/product/types';\n\ntype ShapeTextureFn = (data: any, isMaskedShadow?: boolean) => Texture[];\n\nconst shapeTextureData: ShapeTextureFn = (data, isMaskedShadow) => {\n\n    if (isMaskedShadow)\n        return data.map((entry: any) => {\n            return  {\n                uid: -1,\n                tag: entry.title,\n                src: '/shadow',\n                maps: ['alpha'],\n                normalIntensity: 0,\n                flipY: true,\n                swatches: [],\n                metallic: false,\n                roughness: 0\n            }\n        });\n\n    \n    return data.map((entry: any) => {\n        return  {\n            uid: entry.id,\n            tag: entry.slug,\n            label: entry.title.rendered,\n            src: entry.acf.texture_file ? `/${entry.acf.texture_file.title}` : null,\n            maps: entry.acf.texture_maps_included,\n            normalIntensity: +entry.acf.material_attributes.normal_intensity,\n            flipY: false,\n            swatches: entry.acf.swatches,\n            repeat: +entry.acf.material_attributes.repeat || 1,\n            metallic: entry.acf.material_attributes.metallic\n        }\n    });\n}\n\nexport default shapeTextureData;\n\n","import {Section} from '../store/product/types';\n\ntype ShapeSectionDataFn = (data: any) => Section[];\n\nconst shapeSectionData: ShapeSectionDataFn = (data: any) => {\n\n    return data.map((section: any, idx: number) => {\n\n        const initial_material = section.initial_texture.map((it: any) => {\n            return {uid: it.ID, tag: it.post_name, label: it.post_title}\n        });\n        return  {\n            tag: section.model_tag,\n            label: section.name,\n            available_materials: section.available_textures ? section.available_textures.map((at: any) => {\n                return {uid: at.ID, tag: at.post_name, label: at.post_title}\n            }) : [],\n            current_material: initial_material.length ? initial_material[0] : null,\n            active: idx === 0,\n            color: '#FFFFFF',\n        }\n    });\n}\n\nexport default shapeSectionData;\n","import { PRODUCT_ADD_MESHPARTS, PRODUCT_ADD_MATERIALS, PRODUCT_SET_STAMPA_STYLE, PRODUCT_SET_STAMPA_POS, PRODUCT_SET_STAMPA_COLOR, PRODUCT_SET_STAMPA, PRODUCT_SET_ACTIVE, PRODUCT_SET_TEXTURE, PRODUCT_CLEAR_CUSTOM_IMAGE, PRODUCT_APPLY_CUSTOM_IMAGE, PRODUCT_SET_COLOR, productActionTypes, productState, PRODUCT_ADD_MODEL_DATA, PRODUCT_SET_CUSTOM_IMAGE } from './types';\nimport {shapeSectionData, shapeTextureData} from '../../utils';\nimport {productPartType} from './types';\n\nconst initialState: productState = {\n  loadingMeshParts: true,\n  loadingModelData: true,\n  loadingMaterials: true,\n  meshParts: [],\n  materials: [],\n  sections: [],\n  src: '',\n  customImage: '',\n  stampa: {\n    1: '',\n    2: ''\n  },\n  stampaColor: '#111111',\n  stampaPos: '1',\n  stampaStyle: 'printed'\n};\n\n/**\n * @param state\n * @param action\n */\nexport function productReducer(state = initialState, action: productActionTypes): productState {\n  switch (action.type) {\n    case PRODUCT_ADD_MESHPARTS:\n      \n      const newSectionsWithMeshParts = [...state.sections].map(section => {\n        const newSec = {...section};\n        const [part] = action.payload.filter((part: productPartType) => part.tag === section.tag);\n        newSec.meshPart = part.id;\n        newSec.locked = part.locked;\n        return newSec;\n      });\n\n      const meshParts = action.payload.map((part: any) => {\n        /**\n         * @TODO Need to figure out what to do here?\n         */\n        if (part.tag !== 'quarters')\n          return part;\n        part.active = true;\n        return part;\n      });\n      // Create new product logic\n      return {\n        ...state,\n        loadingMeshParts: false,\n        sections: newSectionsWithMeshParts,\n        meshParts\n        // add new state here\n      };\n      \n    case PRODUCT_SET_ACTIVE:\n    // action.payload === mesh.uuid\n\n    const [meshByIdOrParentOrChildren] = state.meshParts\n    .filter(meshPart => meshPart.id === action.payload ||\n      meshPart.parent === action.payload ||\n      meshPart.children.includes(action.payload));\n\n    const newSectionsNewActive = [...state.sections].map(section => {\n        const ns = {...section};\n        if (ns.meshPart !== meshByIdOrParentOrChildren.id) {\n          ns.active = false;\n          return ns;\n        }\n        ns.active = true;\n        return ns;\n    });\n\n      return {\n        ...state,\n        sections: newSectionsNewActive,\n      };\n\n    case PRODUCT_SET_TEXTURE:\n      // payload === material.uid\n      const [newMaterial] = state.materials.filter(material => material.uid === action.payload);\n      const newActiveSections = [...state.sections].map(section => {\n        const ns = {...section};\n        if (!ns.active)\n          return ns;\n        ns.current_material = newMaterial;\n\n        /**\n         * If the current color doesn't exist in the new material, change the color to the first in swatches of new material\n         */\n        const canKeepCurrentColor = newMaterial.swatches.filter(swatch => swatch.swatch.toLowerCase() === ns.color.toLowerCase()).length !== 0;\n        if (!canKeepCurrentColor)\n          ns.color = newMaterial.swatches[0].swatch;\n\n        return ns;\n      });\n\n      return {\n        ...state,\n        sections: newActiveSections\n      };\n    \n    case PRODUCT_SET_COLOR:\n         // payload === material.uid\n         const newColorSections = [...state.sections].map(section => {\n           const ns = {...section};\n           if (!ns.active)\n             return ns;\n           ns.color = action.payload;\n           return ns;\n         });\n   \n         return {\n           ...state,\n           sections: newColorSections\n         };\n\n    case PRODUCT_ADD_MATERIALS:\n      // Create new materials logic\n      return {\n        ...state,\n        loadingMaterials: false,\n        materials: [...state.materials, ...action.payload]\n        // add new state here\n      };\n\n    case PRODUCT_ADD_MODEL_DATA:\n      const {model_file, shadow_file, sections} = action.payload.acf;\n      const [shadow_material] = shapeTextureData([shadow_file], true);\n\n      shadow_material.maps = ['alpha'];\n      return {\n        ...state,\n        src: model_file,\n        loadingModelData: false,\n        materials: [shadow_material, ...state.materials],\n        sections: shapeSectionData(sections)\n      };\n\n    case PRODUCT_SET_CUSTOM_IMAGE:\n      return {\n        ...state,\n        customImage: action.payload\n      }\n\n    case PRODUCT_APPLY_CUSTOM_IMAGE:\n      // Get active section\n      const [activeSection] = state.sections.filter(section => section.active);\n      const rest = state.sections.filter(section => !section.active);\n      const newActive = {\n       ...activeSection,\n       custom_texture: action.payload\n      }\n      return {\n        ...state,\n        sections: [newActive, ...rest]\n      }\n\n    case PRODUCT_CLEAR_CUSTOM_IMAGE:\n      return {\n        ...state,\n        customImage: ''\n      }\n\n    case PRODUCT_SET_STAMPA:\n      const newStampas = {...state.stampa};\n      newStampas[action.payload.pos] = newStampas[action.payload.pos] === action.payload.letter ? '' : action.payload.letter;\n      return {\n        ...state,\n        stampa: newStampas\n      }\n    case PRODUCT_SET_STAMPA_COLOR:\n      \n      return {\n        ...state,\n        stampaColor: action.payload\n      }\n    case PRODUCT_SET_STAMPA_POS:\n      return {\n        ...state,\n        stampaPos: action.payload\n      }\n      case PRODUCT_SET_STAMPA_STYLE:\n        const [stampaMat] = state.materials.filter(mat => mat.uid === -2); \n        const restMats = state.materials.filter(mat => mat.uid !== -2); \n        const newStampaMat = {...stampaMat};\n        newStampaMat.maps = action.payload === 'stitched' ? ['alpha', 'ao', 'normal'] : ['alpha'];\n        const newMats = [...restMats, newStampaMat];\n        return {\n          ...state,\n          materials: newMats,\n          stampaStyle: action.payload\n        }\n    default:\n      return state;\n  }\n}\n","import _map from 'lodash/map';\n\nimport { INTERFACE_UPDATE_POINTER, INTERFACE_TOGGLE_MODAL, INTERFACE_SET_ACTIVE_STAGE, interfaceActionTypes, interfaceState } from './types';\n\nconst initialState: interfaceState = {\n  pointer: {x: 0, y: 0},\n  modalIsOpen: {\n    customImage: 'closed',\n    customText: 'closed',\n  },\n  currentStage: 'materials'\n};\n\n/**\n * @param state\n * @param action\n */\nexport function interfaceReducer(state = initialState, action: interfaceActionTypes): interfaceState {\n  switch (action.type) {\n    case INTERFACE_UPDATE_POINTER:\n      // Create new interface logic\n      return {\n        ...state,\n        pointer: action.payload\n      };\n    case INTERFACE_TOGGLE_MODAL:\n      /**\n       * This will toggle all modals closed,\n       * it will only open a single modal at a time\n       * if isOpen is true in the action payload.\n       */\n      \n      const newModals: {[key: string]: 'open' | 'closed'} = {};\n      _map({...state.modalIsOpen}, (modal, key) => {\n        if (key !== action.payload.id) {\n          newModals[key] = 'closed';\n       } else {\n        newModals[key] = action.payload.status;\n        }\n      });\n\n    return {\n      ...state,\n      modalIsOpen: newModals\n    }\n\n  case INTERFACE_SET_ACTIVE_STAGE:\n    return {\n      ...state,\n      currentStage: action.payload\n    }\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"@reduxjs/toolkit\";\nimport { Action, ThunkAction, configureStore } from '@reduxjs/toolkit';\nimport {productReducer} from './product/reducers';\nimport {interfaceReducer} from './interface/reducers';\nimport { ThunkDispatch } from 'redux-thunk';\n\nconst rootReducer = combineReducers({\n    product: productReducer,\n    interface: interfaceReducer\n});\n\nexport const store = configureStore({\n    reducer: rootReducer\n});\n\nexport type State = ReturnType<typeof rootReducer>;\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = ThunkDispatch<RootState, void, Action>;\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, Action<string>>;\nexport type GetState = typeof store.getState;"],"sourceRoot":""}